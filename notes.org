* COMMENT File-local variables
# -*- coding:utf-8 -*-
#+TITLE: Maximize Note taking/publishing experience with Org-Mode.
#+AUTHOR: Haran Mia
#+EMAIL: 37643674+haranmia@users.noreply.github.com
#+DATE: %T
#+STARTUP:indent
#+STARTUP: inlineimages


* LICENSE
MIT License

Copyright (c) 2018 Haran Mia

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

** Additional licenses
**** "Publish org-mode sites on Gitlab Pages" by Rasmus Pank Roulund was a great inspiration!
The MIT License (MIT)

Copyright (c) 2016 Rasmus

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


* README
  The idea is to keep everything in a single .org file,
  including both contents and configurations.
  This .org file can also be used for publishing pdf articles,
  web pages, etc. using org-modes export functionalities.

  For availabe features, please refer to the comments/source-codes below.

** TODO Prologue

* Wish-list (features/issues)
:PROPERTIES:
:VISIBILITY: all
:END:
** ISSUES
- [ ] Modify hyperlinks (internal-files starting from root-dir)
      during subtree-contents-refiling-to-org to relative-references
      depending on article's outline-level
      *see if there is a better way of acheiving this*

- [ ] Write a sample article including figures, equations and codes
- [ ] Save figures in a folder, consider file-name rules
- [ ] Start a real experimental Github-pages site

** WISH-LIST
   - [ ] CAPTURE and refile as a subtree in this note
     - [ ] Deal with duplicate outline-headline in different captures.
     - [ ] Sanitizers for title and export-file-name.
     - [ ] Consider a more generic syntax for function-finding-location.

   - [ ] Minify CSS
     - [ ] INVESTIGSTE: Whitespace removal
     - [ ] Tangle blocks in separate css files, remove comments, add license
     - [ ] Unify multiple css in a single file (or include all in HTML)
     - [ ] Automate by hooks

** Resolutions and/or Design considerations
:PROPERTIES:
:VISIBILITY: folded
:END:
- [X] Resolve conflicts with terminologies used for structuring/styles
      such as title, subtite, or page etc.

  Considerations: Using title/subtitle to refer to headings in a single article is rather trivial.
  Therefore group-wise/site-wise title/subtitle should be modified.
  For now using a simple analogy from sailboat racing:

  + a-ship (previously, pagestruct)
    + name
    + anchor (previously, link)
    + mainsail (previously, title)
    + headsail (previously, subtitle)
    + pages/articles x N ( each page will have their individual title/subtitle)

* SRC
** Generic elisp utilities
*** Genpath
#+BEGIN_SRC emacs-lisp
  (defun mon-genpath (path-elem &optional absolute)
    (let ((relative-path (mapconcat 'directory-file-name path-elem "/")))
      (if absolute
          (expand-file-name relative-path)
        relative-path)))
  ;; Example:
  ;; (message (mon-genpath (list "a" "b" "c.txt")))
#+END_SRC
*** Minify CSS
#+BEGIN_SRC emacs-lisp
  (defun mon-css-minify-file (&optional css-src-file css-dest-file)
    (interactive)

    (let* ((src-file (or css-src-file "/tmp/orgstyle-test.css"))
           (dest-file (or css-dest-file src-file)))

        (with-temp-buffer
          (insert-file-contents src-file)
          (mon-css-remove-comments)
          (mon-css-remove-whitespaces)

          (write-region (buffer-substring-no-properties (point-min) (point-max)) nil dest-file))))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-css-remove-comments()
    (interactive)

    (goto-char (point-min))
    (let ((kill-ring-at-start kill-ring) ;; save kill-ring
          (comment-start "/*")
          (comment-end "*/")
          (comment-start-skip "/\\*+[ \t]*")
          (comment-end-skip "[ \t]*\\*+/"))

      (comment-kill (count-lines (point-min) (point-max)))
      (setq kill-ring kill-ring-at-start))) ;; restore kill-ring
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-css-remove-whitespaces ()
    (interactive)

    (goto-char (point-min))
    ;;(replace-regexp "[ \t\r\n]+" ""))
    (replace-regexp "[\t\n]+" ""))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-css-add-license (&optional css-file-path comments)
    (interactive)
    (message "THIS FUNCTIONALITY IS NOT AVAILABLE YET")
    )
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-css-unify-files (&optional css-files-list)
    (interactive)
    (message "THIS FUNCTIONALITY IS NOT AVAILABLE YET")
    )
#+END_SRC
** Generic org-mode utilities
*** Org-outline to filename
#+BEGIN_SRC emacs-lisp
  (defun mon-org-outline-to-org-filename (&optional base-directory)
    (mon-org-outline-to-filename ".org" base-directory))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-outline-to-filename (&optional extension base-directory)
    "Note: non-nil (file) extension contains the leading dot.
  "
    (let ((filename
           (concat (org-display-outline-path nil t "/" t) extension)))

      (if base-directory
          (expand-file-name
           filename (file-name-as-directory base-directory))
        filename)))
#+END_SRC
*** Org-outline heading (get-function)
#+BEGIN_SRC emacs-lisp
  (defun mon-org-outline-get-heading ()
    (org-get-heading "no-tags" "no-todo" "no-priority" "no-comment"))
  ;; Although calling (org-heading-components) and then retrieving
  ;; the 4th-element necessarily does the same thing,
  ;; org-get-heading is more intuitive, provides better abstraction.
#+END_SRC
*** Random strings/filenames using ORG ID
#+BEGIN_SRC emacs-lisp
  (defun mon-org-random-string-create (&optional insert-at-point return-string)
    (interactive)
    (let ((random-string (org-id-new))) ;; (org-id-new prefix)
      ;;(with-temp-buffer
      ;;  (insert (format "%s" random-string))
      ;;  (clipboard-kill-region (point-min) (point-max))
      ;;  )
      (kill-new random-string) ;; kill-new @ simple.el

      (if insert-at-point
          (insert (format "%s" random-string)))

      (if return-string random-string)))
#+END_SRC

** CAPTURE and refile as a subtree in this note
*** Capture Templates
#+BEGIN_SRC emacs-lisp
  (setq org-capture-templates
        '(
          ("a" "Articles" entry
           (file+olp buffer-file-name
                     "STOCK" "GRAINS" "ARTICLES") ;; Outline "STOCK/GRAINS/ARTICLES" must exist
           "* TODO %^{Title}
  ,#+OPTIONS: toc:nil
  ,#+begin_abstract
  %^{Abstract}
  Keywords: %^{Keywords (comma separated)}
  ,#+end_abstract
  %\\2\n%?\n"
           :prepend t :kill-buffer t)
          ))
  ;; To capture using the above template, use C-c c a
  ;; then interactively input Title and other entries
  ;; finally C-c C-c to finish.
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-capture-after-finalize-hook ()
    (org-capture-goto-last-stored))

  (add-hook 'org-capture-after-finalize-hook
            'mon-org-capture-after-finalize-hook)
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-capture-prepare-finalize-hook ()
      (progn
        (mon-org-custom-export-file-name-create)
        (mon-org-custom-id-create)
        (mon-org-custom-title-create)
        (mon-org-custom-subtitle-create)
        (mon-org-custom-author-create)
        (mon-org-custom-email-create)
        (mon-org-custom-create-timestamp-create)
        (mon-org-custom-startup-options-create)
        ))

  (add-hook 'org-capture-prepare-finalize-hook
            'mon-org-capture-prepare-finalize-hook)

#+END_SRC

*** Custom properties (export-file-name, titles, etc.)
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-property-get (&optional property-str)
    "Properties such as EXPORT_FILE_NAME etc. to be passed
  enclosed within double quotation."

    (org-entry-get (point) property-str))
#+END_SRC
**** EXPORT_FILE_NAME
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-export-file-name-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((export-file-name (mon-org-custom-property-get "EXPORT_FILE_NAME")))
        (unless export-file-name
          (org-set-property "EXPORT_FILE_NAME"
                            (mon-org-outline-to-org-filename))))
      (widen)))
#+END_SRC

**** TANGLE HEADER-ARGS (Cf. EXPORT_FILE_NAME)
#+BEGIN_SRC emacs-lisp
  (defun mon-org-bable-tangle-header-args-create (&optional extension)
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((export-file (mon-org-custom-property-get "header-args")))
        (unless export-file
          (org-set-property "header-args"
                            (concat ":tangle "
                                    (mon-org-outline-to-filename)
                                    (or extension "")))))
      (widen)))
#+END_SRC
**** ORG ID and CUSTOM_ID
#+BEGIN_SRC emacs-lisp
  (require 'org-id) ;; for custom-id in property-drawers (@subtree)
  (setq org-id-link-to-org-use-id 'create-if-interactive-and-no-custom-id)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (defun mon-org-id-create (&optional force)
    (interactive)
    (org-id-get-create force))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-id-create (&optional force prefix)
    (interactive)

    (when force (org-entry-put (point) "CUSTOM_ID" nil))

    (let ((custom-id (mon-org-custom-property-get "CUSTOM_ID")))
      (if (and custom-id (stringp custom-id) (string-match "\\S-" custom-id))
          custom-id
        (setq custom-id (org-id-new prefix)))

      (org-entry-put (point) "CUSTOM_ID" custom-id)
      (org-id-add-location custom-id (buffer-file-name (buffer-base-buffer)))))
#+END_SRC

**** TTILE
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-title-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((title (mon-org-custom-property-get "TITLE")))
        (unless title
          (org-set-property "TITLE"
                            (mon-org-outline-get-heading))))
      (widen)))
 #+END_SRC
**** SUBTITLE
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-subtitle-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((title (mon-org-custom-property-get "SUBTITLE")))
        (unless title
          (org-set-property "SUBTITLE" ""))) ;; now, just a placeholder
      (widen)))
#+END_SRC

**** AUTHOR
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-author-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((title (mon-org-custom-property-get "AUTHOR")))
        (unless title
          (org-set-property "AUTHOR" ""))) ;; now, just a placeholder
      (widen)))
#+END_SRC
**** EMAIL
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-email-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((title (mon-org-custom-property-get "EMAIL")))
        (unless title
          (org-set-property "EMAIL" ""))) ;; now, just a placeholder
      (widen)))
#+END_SRC
**** Created date and time a.k.a. CREATE_TIMESTAMP
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-create-timestamp-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((title (mon-org-custom-property-get "CREATE_TIMESTAMP")))
        (unless title
          (org-set-property "CREATE_TIMESTAMP" (format-time-string "%c" (current-time)))))
      (widen)))
#+END_SRC
**** STARTUP OPTIONS
#+BEGIN_SRC emacs-lisp
  (defun mon-org-custom-startup-options-create ()
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)

      (let ((title (mon-org-custom-property-get "STARTUP")))
        (unless title
          (org-set-property "STARTUP" ""))) ;; now, just a placeholder
      (widen)))
#+END_SRC
** Refile a subtree from this note
*** File-local variables
#+BEGIN_SRC emacs-lisp
  (defun mon-org-insert-file-headers
      (&optional
       title
       subtitle
       author
       email
       fixed-date-time
       keyword-tags
       startup-option)

    (interactive)

    (format "* COMMENT File-local variables
  # -*- coding:utf-8 -*-
  ,#+TITLE: %s
  ,#+SUBTITLE: %s
  ,#+AUTHOR: %s
  ,#+EMAIL: %s
  ,#+DATE: %s
  ,#+KEYWORDS: %s
  ,#+STARTUP: %s\n\n\n"
            (or title "Untitled")
            (or subtitle "")
            (or author "Anonymous")
            email
            (or fixed-date-time (format-time-string "%c" (current-time))) ;; if not previously created, current-time should be good
            keyword-tags
            (or startup-option "indent")))
#+END_SRC
*** Subtree contents for org-export
#+BEGIN_SRC emacs-lisp
  (defun mon-org-subtree-contents-refile-to-org (&optional base-directory)
    (interactive)
    (mon-org-subtree-contents-refile ".org" base-directory))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-subtree-contents-refile-bare (&optional base-directory)
    (interactive)
    (mon-org-subtree-contents-refile nil base-directory))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-subtree-contents-refile (&optional extension base-directory)
    (interactive)

    (save-excursion
      (org-narrow-to-subtree)
      (org-back-to-heading)
      (let ((target-filename
             (or (mon-org-custom-property-get "EXPORT_FILE_NAME")
                 (mon-org-outline-to-filename extension base-directory))))

        (write-region (org-get-entry) nil target-filename))
      (widen)))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-subtree-contents-refile-to-org-no-props (&optional base-directory)
    (interactive)
    (mon-org-subtree-contents-refile-no-props ".org" base-directory))

  (defun mon-org-subtree-contents-refile-bare-no-props (&optional base-directory)
    (interactive)
    (mon-org-subtree-contents-refile-no-props nil base-directory))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-org-subtree-contents-refile-no-props (&optional extension base-directory)

    (save-excursion
      (org-narrow-to-subtree)
      (org-back-to-heading)

      (let ((org-yank-adjusted-subtrees t)
            (target-filename
             (or (mon-org-custom-property-get "EXPORT_FILE_NAME")
                 (mon-org-outline-to-filename extension base-directory)))
            (this-title (mon-org-custom-property-get "TITLE"))
            (this-subtitle (mon-org-custom-property-get "SUBTITLE"))
            (this-author (mon-org-custom-property-get "AUTHOR"))
            (this-email (mon-org-custom-property-get "EMAIL"))
            (this-create-timestamp (mon-org-custom-property-get "CREATE_TIMESTAMP"))
            (this-update-timestamp (mon-org-custom-property-get "UPDATE_TIMESTAMP")) ;; (last update provided via postamble) ponder if keeping that information in property drawer will be of use
            (this-keywords (concat (mon-org-custom-property-get "KEYWORDS")
                                   (mon-parse-abstract-section)
                                   )) ;; need to take-out from buffer
            (this-startup (mon-org-custom-property-get "STARTUP"))
            )

        ;;(write-region (org-get-entry) nil target-filename)
        (org-copy-subtree)
        (with-current-buffer (get-buffer-create (concat "*-temp-buffer-SOME-RANDOM-ID-HERE-*"))
          (org-mode)


          (insert (mon-org-insert-file-headers
                   this-title ;; title
                   this-subtitle ;; subtitle
                   this-author ;; author
                   this-email ;; email
                   this-create-timestamp ;; fixed-date-time
                   this-keywords ;; keyword-tags
                   this-startup ;;startup-option
                   ))
          (save-excursion
            (goto-char (point-min))
            (write-region (point-at-bol 2) (point-max) target-filename)) ;; removes the "* COMMENT File-local variables" outline

          (org-yank)
          (org-back-to-heading)


          (save-excursion
            (if org-descriptive-links
                (org-toggle-link-display))
            (replace-regexp "^\\[\\[file:stock/grains/media/"
                            (concat "[[file:" (replace-regexp-in-string ;; for now replace all of the suffix-string in hyperlink
                                               "[ aA-zZ]+/"
                                               "../"
                                               (file-relative-name
                                                (file-name-directory target-filename) ;; such as "stock/grains/articles/a.org"
                                                "stock/grains"))
                                    "media/"))

            )
          ;;(goto-char (point-min)) ;; heading may be different now, use point-min--> try save-excursion instead


          (if (re-search-forward ":PROPERTIES:" (point-max) t)
              (let ((beg (match-beginning 0))
                    (end (re-search-forward ":END:")))
                (write-region (+ end 1) (point-max) target-filename t)) ;; write-region with append=t

            (write-region (point-at-bol 2) (point-max) target-filename t))


          (kill-buffer)))
      (widen)))
#+END_SRC

*** Tangle babel source blocks
#+BEGIN_SRC emacs-lisp
  (defun mon-org-subtree-tangle-all-babel-blocks ()
    "header-args :tangle <filename.extension>
  is assumed to be present in subtree properties."
    (interactive)

    (save-excursion
      (org-back-to-heading)
      (org-narrow-to-subtree)
      (org-babel-tangle)
      (widen)))
#+END_SRC
** Parse contents
*** TODO Parse abstract section [(Cf. Backend) Remove keywords-region from abstract section)]
#+BEGIN_SRC emacs-lisp
  (defun mon-parse-abstract-section (&optional delete-keywords)

    (interactive)

    (save-excursion
      ;;(org-back-to-heading)

      (let* ((section-boundary (mon-abstract-section-boundary-positions))
             (keywords-region-boundary (mon-keywords-region-boundary-positions))
             (keywords-values (buffer-substring
                               (nth 3 keywords-region-boundary)
                               (nth 4 keywords-region-boundary))))

        ;; To remove keywords region:
        (if delete-keywords
            (progn
              (message "Region to be removed:\n")
              (message (format "%s\n****\n" (buffer-substring
                                             (nth 1 keywords-region-boundary)
                                             (nth 4 keywords-region-boundary))))
              ;;(delete-region (nth 1 keywords-region-boundary)
              ;;               (nth 4 keywords-region-boundary))
              (mon-remove-keywords-region (nth 1 keywords-region-boundary)
                                          (nth 4 keywords-region-boundary)))
          (message "Keywords are not removed by default")
          )

        (message (format "%s" keywords-values))
        keywords-values
        )

      )
    )
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-remove-keywords-region (&optional beg end)
    (delete-region beg end))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-abstract-section-boundary-positions ()
    (goto-char (point-min)) ;; Required
    ;;(message (format "%s" (buffer-substring (point-min) (+ (point-min) 200))))

    (let ((beg (+ 1 (re-search-forward "#\\+begin_abstract$")))
          (end (progn (re-search-forward "#\\+end_abstract$")
                      (match-beginning 0))))
      (cons beg end)))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-keywords-region-boundary-positions (&optional start finish include-key)
    "Ponder: narrow-to-region subject to input arguments, then simplify let in caller.
  include-key is a flag (not) to include the mathed string 'Keyworrds ::' as well.
  "
    (goto-char (point-min)) ;; Required

    (let ((beg (+ 0 (re-search-forward "[ \t\n]*Keywords[ ]*[:]*[ ]*")))
          (regexp-pat-beg (match-beginning 0))
          (regexp-pat-end (match-end 0))
          (end (progn (re-search-forward "[,.]*$")
                      (match-beginning 0))))

      (list (point-min) ;; nth= 0
            regexp-pat-beg ;; nth= 1
            regexp-pat-end ;; nth= 2
            beg ;; nth= 3
            end ;; nth= 4
            )))
#+END_SRC
** HTML Publishing
*** Congfiguration database
Put all configurations in the hash-table 'mon-configdb'
#+BEGIN_SRC emacs-lisp
  (setq mon-configdb (make-hash-table))
#+END_SRC

*** Core directory and path utilities
**** File-dir and root-dir
#+BEGIN_SRC emacs-lisp
  (setf (gethash 'mon-file-dir mon-configdb)
        (file-name-directory (or load-file-name buffer-file-name)))

  (defun mon-file-dir ()
    (gethash 'mon-file-dir mon-configdb))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (setf (gethash 'mon-root-dir mon-configdb) "stock")

  (defun mon-root-dir (&optional init-root-dir)
    (or init-root-dir
        (gethash 'mon-root-dir mon-configdb)))
#+END_SRC
**** Base directory
#+BEGIN_SRC emacs-lisp
  (setf (gethash 'mon-contents-dir mon-configdb)
        (concat (file-name-as-directory (mon-root-dir))
                (file-name-as-directory "grains"))) ;; default

  (defun mon-contents-dir (&optional init-contents-dir use-as-origin)
    ;; set
    (and init-contents-dir
         (if use-as-origin
             ;; if
             (setf (gethash 'mon-contents-dir mon-configdb)
                   (file-name-as-directory init-contents-dir))
           ;; else
           (setf (gethash 'mon-contents-dir mon-configdb)
                 (concat (file-name-as-directory (mon-root-dir))
                         (file-name-as-directory init-contents-dir)))))
    ;; get
    (gethash 'mon-contents-dir mon-configdb))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-www-contents-directory (&optional dir prefix-path suffix-path absolute)
    (let* ((this-dir
            (file-name-as-directory
             (concat (or (and prefix-path (file-name-as-directory prefix-path))
                         (mon-contents-dir))
                     dir)))

           (suffix-to-this
            (and suffix-path
                 (if (file-name-extension suffix-path) suffix-path
                   (file-name-as-directory suffix-path))))
           ;;
           (contents-relative-path (concat this-dir suffix-to-this)))


        ;; Use concat to force relative path by default.
        ;; For absolute==NON-NIL, use absolute path.
        (if absolute
            (expand-file-name contents-relative-path)
          contents-relative-path)))
#+END_SRC
**** Publishing-dir
#+BEGIN_SRC emacs-lisp
  (setf (gethash 'mon-www-dir mon-configdb)
        (file-name-as-directory "w3")) ;; default
  (defun mon-www-dir (&optional init-www-dir use-as-origin)
      ;; set
      (and init-www-dir
           (if use-as-origin
               (setf (gethash 'mon-www-dir mon-configdb)
                     (file-name-as-directory init-www-dir))))

      ;; get
      (gethash 'mon-www-dir mon-configdb))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-www-publish-directory (&optional dir prefix-path suffix-path absolute)
    (let* ((this-dir
            (file-name-as-directory
             (concat (or (and prefix-path (file-name-as-directory prefix-path))
                         (mon-www-dir))
                     dir)))

           (suffix-to-this
            (and suffix-path
                 (if (file-name-extension suffix-path) suffix-path
                   (file-name-as-directory suffix-path))))
           ;;
           (contents-relative-path (concat this-dir suffix-to-this)))

      ;; Use concat to force relative path by default.
      ;; For absolute==NON-NIL, use absolute path.
      (if absolute
          (expand-file-name contents-relative-path)
        contents-relative-path)))

#+END_SRC

*** Theme
**** Name and deploy directory
#+BEGIN_SRC emacs-lisp
  (setf (gethash 'theme-name mon-configdb) '"proxy")

  (defun mon-theme-name (&optional init-theme-name)
    (or init-theme-name
        (gethash 'theme-name mon-configdb)))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-theme-deploy-dir (&optional init-theme-name)
    (format "chunk/themes/%s" (mon-theme-name init-theme-name)))
#+END_SRC
**** Base extension
#+BEGIN_SRC emacs-lisp
  (setf (gethash 'mon-attachments mon-configdb)
        (regexp-opt '("css" "woff" "js" "html" "pdf"
                      "gif" "ico" "jpg" "jpeg" "png" "svg")))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-base-extension (&optional init-theme)
    (gethash 'mon-attachments mon-configdb))
#+END_SRC
**** Base directory
#+BEGIN_SRC emacs-lisp
  (defun mon-base-directory (&optional theme page prefix-dir suffix-dir absolute)
    (let ((dir
           (if theme
               (mon-www-contents-directory (mon-theme-deploy-dir theme) (mon-root-dir)) ;; if
             ;; else == mon-base-direcotry-no-theme
             (mon-www-contents-directory page prefix-dir suffix-dir absolute))))

    (downcase dir)))
#+END_SRC
**** Publishing directory
#+BEGIN_SRC emacs-lisp
  (defun mon-publishing-directory (&optional theme page prefix-dir suffix-dir absolute)
    (let ((dir
           (if theme
               (mon-www-publish-directory (mon-theme-deploy-dir theme)) ;; if
             ;; else == mon-www-publish-dir-no-theme
             (mon-www-publish-directory page prefix-dir suffix-dir absolute))))

    (downcase dir)))
#+END_SRC
**** Postamble
#+BEGIN_SRC emacs-lisp
  (defun mon-html-postamble (&optional init-theme)
    "<p>Last update: <span class=\"date\">%C</span></p>")
#+END_SRC
**** Preamble
#+BEGIN_SRC emacs-lisp
  (defun mon-html-preamble (&optional init-page init-theme mainsail headsail)
    "TBD: Constructor for ships /w theme-inheritance someday."
    (mon-html-preamble-impl-proxy '((:ships . (((:name . "About")
                                                (:anchor . "/"))
                                               ((:name . "Articles")
                                                (:anchor . "articles")))))
                                  mainsail ;; main-headline
                                  headsail) ;; sub-headline
    )
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-html-preamble-impl-proxy (&optional ships-alist mainsail headsail)
    "Note: mainsail/headsail are placeholders for main/sub-headline."

      (let* ((f-name (lambda (x) (alist-get ':name  x)))
             (f-link (lambda (x) (alist-get ':anchor  x)))
             (f-insert
              (lambda (x)
                (progn
                  (insert (format "  <a href=\"%s\">%s</a>\n"
                                  (expand-file-name (file-name-as-directory
                                                     (funcall f-link x))
                                                    "/")
                                  (funcall f-name x)
                                  ))))))


        (with-temp-buffer
          (insert (format "<h1 class=\"mainsail\">%s\n" (or mainsail "%%MAIN-HEADLINE")))
          (insert (format "  <p class=\"headsail\"> %s </p>\n" (or headsail "%%SUB-HEADLINE")))

          (insert (format "</h1>\n"))
          (insert (format "<compass>\n"))

          (funcall f-insert (car (alist-get ':ships ships-alist)))
           (mapc '(lambda (y)
                    (funcall f-insert y))
                 (cdr (alist-get ':ships ships-alist)))

           (insert (format "</compass>\n"))
           (buffer-string))))
#+END_SRC

**** Head
#+BEGIN_SRC emacs-lisp
  (defun mon-html-head (&optional local-css-list)
    "TODO: Provide both local theme and URI based (google-api, boosstrap etc.) css.
  Note: It is possible to override the global value by setting
  ,#+HTML_HEAD: attributes appropriately in individual .org files."

    (mon-html-head-impl (list
                         "normalize.css"
                         "htmlize.css"
                         "orgstyle-bare.css"
                         "orgstyle-custom.css")))

#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-html-head-impl (&optional local-css-list)

    (let ((f-local-css-path (lambda (x) (mon-genpath (list (mon-theme-deploy-dir) "assets" "css" x)))))
      (with-temp-buffer

        (mapc '(lambda (y) (insert (format "<link rel=\"stylesheet\" type=\"text/css\" href=\"/%s\" />\n" (funcall f-local-css-path y))))
              local-css-list)
        (buffer-string))))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-html-head-extra (&optional local-css-list)
    "Note: It is possible to override the global value by setting
  ,#+HTML_HEAD_EXTRA: attributes appropriately in individual .org files."

    (mon-html-head-extra-impl local-css-list))

#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-html-head-extra-impl (&optional local-css-list)
    (let ((f-local-css-path (lambda (x) (mon-genpath (list (mon-theme-deploy-dir) "assets" "css" x)))))
      (with-temp-buffer
        (mapc '(lambda (y) (insert (format "<link rel=\"stylesheet\" type=\"text/css\" href=\"/%s\" />\n" (funcall f-local-css-path y))))
              local-css-list)
        (buffer-string))))
#+END_SRC

*** Sitemaps
**** ARTICLES
#+BEGIN_SRC emacs-lisp
    (defun mon-sitemap-function-article (title list)
      (mapconcat
       'identity
       (list
        (concat "#+TITLE: " title)
        (org-list-to-subtree list '(:istart "** "))
        "
       ,#+OPTIONS: title:nil num:nil toc:nil
       ,#+HTML_HEAD_EXTRA: <link rel=\"stylesheet\" type=\"text/css\" href=\"/chunk/themes/proxy/assets/css/style-article-index.css\"/>")
       "\n\n"))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-format-entry-article-div (entry style project)
    (when (not (directory-name-p entry))
      (concat
       (format "
      [[file:%s][%s]]
      ,#+begin_article-summary
      ,#+begin_date
      %s
      ,#+end_date
      ,#+begin_tags
      %s
      ,#+end_tags
      ,#+end_article-summary

      ,#+INCLUDE: \"%s::abstract\"

      [[file:%s][Read more]]
      "
               entry
               (org-publish-find-title entry project)
               (format-time-string "%B %e, %Y" (org-publish-find-date entry project))
               (org-publish-find-property entry :keywords project 'html)
               entry
               entry))))

#+END_SRC
#+BEGIN_SRC emacs-lisp
  (defun mon-format-entry-article (entry style project)
      (when (not (directory-name-p entry))

        (let* ((author-property (car (org-publish-find-property entry :author project)))
               (author-and-link
                (cond ((null author-property) "Anonymous")
                      ((atom author-property) author-property)
                      (t (format "[[%s][%s]]"
                                 (plist-get (nth 1 author-property) :raw-link)
                                 (nth 2 author-property))))))

          (concat
           (format "
        [[file:%s][%s]]
        ,#+begin_article-summary
        <span class=\"date\"> %s </span> by <span class=\"author\"> %s </span>
        ,#+INCLUDE: \"%s::abstract\"
        [[file:%s][Read more]]
        <hr />
        ,#+end_article-summary
        "
                   entry
                   (org-publish-find-title entry project)
                   (format-time-string "%B %e, %Y" (org-publish-find-date entry project))
                   author-and-link
                   entry
                   entry)))))
 #+END_SRC

*** Backend
**** Tag sanitizers
#+BEGIN_SRC emacs-lisp
  (defun mon-sanitize-html-tag-hr(string backend info)
    (let* ((regexp-pat "&lt;hr /&gt;")
           (replace-pat "<hr />"))
      (replace-regexp-in-string regexp-pat replace-pat string)))


  (defun mon-sanitize-html-tag-span-end(string backend info)
    (let* ((regexp-pat "&lt;/span&gt;") ;; (concat prefix-pat "&lt;/span&gt;" suffix-pat))
           (replace-pat "</span>"))
      (replace-regexp-in-string regexp-pat replace-pat string)))


  (defun mon-sanitize-html-tag-span-beg(string backend info &optional class-name prefix-pat suffix-pat)
    (let* ((class-str (and class-name
                           (concat " class=\"" class-name "\"")))
           (regexp-pat (concat prefix-pat "&lt;span" class-str "&gt;" suffix-pat))
           (replace-pat (concat "<span" class-str ">")))
      (replace-regexp-in-string regexp-pat replace-pat string)))
#+END_SRC

**** Remove keywords-region from abstract section
#+BEGIN_SRC emacs-lisp
  (defun mon-proxy-articles-index-special-block-filter (block-data backend info)

    (cond ((eq backend 'html)
           (let ((file (buffer-file-name (current-buffer))))
             (if (and file
                    (string-match-p "index.org" file))

                 (let* ((block-data1 (mon-sanitize-html-tag-hr block-data backend info))
                        ;;
                        (block-data2 (mon-sanitize-html-tag-span-end block-data1 backend info))
                        (block-data3 (mon-sanitize-html-tag-span-beg block-data2 backend info "author"))
                        (block-data4 (mon-sanitize-html-tag-span-beg block-data3 backend info "date"))
                        ;;
                        (block-data5 (replace-regexp-in-string
                                      "[ \t\n]*\<p>[ \t\n]Keywords: .*[ \t\n]*</p>[ \t\n]*" "" block-data4))
                        ;;
                        (block-data6 (replace-regexp-in-string
                                    "</p></div>[ \t\n]*<p>[ \t\n]*\\(.*\\)[ \t\n]*\\(<hr />\\)[ \t\n]*</p>"
                                  "\\1\\2\n</p>\n</div>" block-data5))
                        ;;(regexp-pat2 "</div>\\([ \t\n]*\\)<p>")
                        ;;(replace-pat2"</div>\\1<p style=\"display:inline\">")
                        ;;(block-data6 (replace-regexp-in-string regexp-pat2 replace-pat2 block-data5))
                        ;;
                        )
                   (setq block-data block-data6)))))))



  (eval-after-load 'ox '(add-to-list
                         'org-export-filter-special-block-functions
                         'mon-proxy-articles-index-special-block-filter))
#+END_SRC
*** Project-alist
**** Utilities
#+BEGIN_SRC emacs-lisp
  (defun mon-publish-alist-name (&optional theme suffix delimiter)
    (let ((sentinel
           (if suffix (concat (or delimiter "-") suffix))))

      (concat "mon" (or delimiter "-") (mon-theme-name theme)
              sentinel)))
#+END_SRC
**** Project alist and components (declarations only)
#+BEGIN_SRC emacs-lisp
  (setq org-publish-project-alist ; (org-publish-project-alist)
        (list))
#+END_SRC
#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-publish-project-alist
               (list (mon-publish-alist-name) ;; project name generated as mon-<theme>
                     :components (list
                                  (mon-publish-alist-name nil "chunk") ;; default
                                  (mon-publish-alist-name nil "media") ;; default
                                  (mon-publish-alist-name nil "-top") ;; default
                                  ;;-----
                                  (mon-publish-alist-name nil "articles")
                                  )))
#+END_SRC

**** CHUNK
#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-publish-project-alist
               ;; Move chunk files, maybe move into
               (list (mon-publish-alist-name nil "chunk") ;; default
                     :base-directory (mon-base-directory (mon-theme-name))
                     :exclued (regexp-opt (list (file-name-nondirectory (directory-file-name (mon-www-publish-directory)))))
                     :base-extension (mon-base-extension)

                     :publishing-directory (mon-publishing-directory (mon-theme-name))
                     :publishing-function 'org-publish-attachment
                     :recursive t
                     ))
#+END_SRC

**** MEDIA
#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-publish-project-alist
               ;; Move media files, maybe move into
               (list (mon-publish-alist-name nil "media") ;; default
                     :base-directory (mon-base-directory) ;; (mon-base-directory nil "media")
                     :exclued (regexp-opt (list (file-name-nondirectory (directory-file-name (mon-www-publish-directory)))))
                     :base-extension (mon-base-extension)

                     :publishing-directory (mon-publishing-directory)
                     :publishing-function 'org-publish-attachment
                     :recursive t
                     ))
#+END_SRC

**** TOP
#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-publish-project-alist
               ;; Various misc files in the root
               (list (mon-publish-alist-name nil "-top") ;; default
                     :base-directory (mon-base-directory nil "about")
                     :base-extension "org"

                     :publishing-directory (mon-publishing-directory)
                     :publishing-function '(org-html-publish-to-html)
                     :recursive t

                     :auto-sitemap nil

                     :html-postamble (mon-html-postamble)
                     :html-preamble (mon-html-preamble
                                     "about"
                                     "proxy"
                                     "LowLand *Travellers*"   ;; mainsail/headline @ args: ship-structure
                                     "Never stop exploring!") ;; headsail/headline @ args: ship-structure

                     :html-head-include-default-style nil ;; Disable default css style
                     :html-head-include-scripts nil ;; Disable default javascript
                     :html-head (mon-html-head)
                     ))
#+END_SRC
**** ARTICLES
#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-publish-project-alist
               (list (mon-publish-alist-name nil "articles")
                     :base-directory (mon-base-directory nil "articles")

                     :publishing-directory (mon-publishing-directory nil "articles")
                     :publishing-function 'org-html-publish-to-html
                     :recursive t


                     :html-postamble (mon-html-postamble)
                     :html-preamble (mon-html-preamble
                                     "about"
                                     "proxy"
                                     "HighLand *Travellers*" ;; mainsail/headline @ args: ship-structure
                                     "Also keep exploring!") ;; headsail/headline @ args: ship-structure

                     :html-head-include-default-style nil ;; Disable default css style
                     :html-head-include-scripts nil ;; Disable default javascript
                     :html-head (mon-html-head)


                     :auto-sitemap t
                     :sitemap-filename "index.org"
                     :sitemap-function 'mon-sitemap-function-article
                     :sitemap-sort-files 'anti-chronologically
                     :sitemap-format-entry 'mon-format-entry-article
                     ;;
                     :sitemap-style 'list
                     :with-tags nil
                     ))
#+END_SRC
* STOCK
** GRAINS
*** ARTICLES
** CHUNK
*** THEMES
**** PROXY
***** ASSETS
****** CSS
******* orgstyle.css
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/orgstyle.css
:END:
******** normalize.css v8.0.0
#+BEGIN_SRC css
  /*
  normalize.css: The MIT License (MIT)

  Copyright © Nicolas Gallagher and Jonathan Neal

  Permission is hereby granted, free of charge, to any person obtaining a copy of
  this software and associated documentation files (the "Software"), to deal in
  the Software without restriction, including without limitation the rights to
  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  of the Software, and to permit persons to whom the Software is furnished to do
  so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  ,*/
#+END_SRC
#+BEGIN_SRC css
  /*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */

  /* Document
     ========================================================================== */

  /**
   ,* 1. Correct the line height in all browsers.
   ,* 2. Prevent adjustments of font size after orientation changes in iOS.
   ,*/

  html {
    line-height: 1.15; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
  }

  /* Sections
     ========================================================================== */

  /**
   ,* Remove the margin in all browsers.
   ,*/

  body {
    margin: 0;
  }

  /**
   ,* Correct the font size and margin on `h1` elements within `section` and
   ,* `article` contexts in Chrome, Firefox, and Safari.
   ,*/

  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }

  /* Grouping content
     ========================================================================== */

  /**
   ,* 1. Add the correct box sizing in Firefox.
   ,* 2. Show the overflow in Edge and IE.
   ,*/

  hr {
    box-sizing: content-box; /* 1 */
    height: 0; /* 1 */
    overflow: visible; /* 2 */
  }

  /**
   ,* 1. Correct the inheritance and scaling of font size in all browsers.
   ,* 2. Correct the odd `em` font sizing in all browsers.
   ,*/

  pre {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  /* Text-level semantics
     ========================================================================== */

  /**
   ,* Remove the gray background on active links in IE 10.
   ,*/

  a {
    background-color: transparent;
  }

  /**
   ,* 1. Remove the bottom border in Chrome 57-
   ,* 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   ,*/

  abbr[title] {
    border-bottom: none; /* 1 */
    text-decoration: underline; /* 2 */
    text-decoration: underline dotted; /* 2 */
  }

  /**
   ,* Add the correct font weight in Chrome, Edge, and Safari.
   ,*/

  b,
  strong {
    font-weight: bolder;
  }

  /**
   ,* 1. Correct the inheritance and scaling of font size in all browsers.
   ,* 2. Correct the odd `em` font sizing in all browsers.
   ,*/

  code,
  kbd,
  samp {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  /**
   ,* Add the correct font size in all browsers.
   ,*/

  small {
    font-size: 80%;
  }

  /**
   ,* Prevent `sub` and `sup` elements from affecting the line height in
   ,* all browsers.
   ,*/

  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  /* Embedded content
     ========================================================================== */

  /**
   ,* Remove the border on images inside links in IE 10.
   ,*/

  img {
    border-style: none;
  }

  /* Forms
     ========================================================================== */

  /**
   ,* 1. Change the font styles in all browsers.
   ,* 2. Remove the margin in Firefox and Safari.
   ,*/

  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 1 */
    line-height: 1.15; /* 1 */
    margin: 0; /* 2 */
  }

  /**
   ,* Show the overflow in IE.
   ,* 1. Show the overflow in Edge.
   ,*/

  button,
  input { /* 1 */
    overflow: visible;
  }

  /**
   ,* Remove the inheritance of text transform in Edge, Firefox, and IE.
   ,* 1. Remove the inheritance of text transform in Firefox.
   ,*/

  button,
  select { /* 1 */
    text-transform: none;
  }

  /**
   ,* Correct the inability to style clickable types in iOS and Safari.
   ,*/

  button,
  [type="button"],
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button;
  }

  /**
   ,* Remove the inner border and padding in Firefox.
   ,*/

  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
  }

  /**
   ,* Restore the focus styles unset by the previous rule.
   ,*/

  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  /**
   ,* Correct the padding in Firefox.
   ,*/

  fieldset {
    padding: 0.35em 0.75em 0.625em;
  }

  /**
   ,* 1. Correct the text wrapping in Edge and IE.
   ,* 2. Correct the color inheritance from `fieldset` elements in IE.
   ,* 3. Remove the padding so developers are not caught out when they zero out
   ,*    `fieldset` elements in all browsers.
   ,*/

  legend {
    box-sizing: border-box; /* 1 */
    color: inherit; /* 2 */
    display: table; /* 1 */
    max-width: 100%; /* 1 */
    padding: 0; /* 3 */
    white-space: normal; /* 1 */
  }

  /**
   ,* Add the correct vertical alignment in Chrome, Firefox, and Opera.
   ,*/

  progress {
    vertical-align: baseline;
  }

  /**
   ,* Remove the default vertical scrollbar in IE 10+.
   ,*/

  textarea {
    overflow: auto;
  }

  /**
   ,* 1. Add the correct box sizing in IE 10.
   ,* 2. Remove the padding in IE 10.
   ,*/

  [type="checkbox"],
  [type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
  }

  /**
   ,* Correct the cursor style of increment and decrement buttons in Chrome.
   ,*/

  [type="number"]::-webkit-inner-spin-button,
  [type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  /**
   ,* 1. Correct the odd appearance in Chrome and Safari.
   ,* 2. Correct the outline style in Safari.
   ,*/

  [type="search"] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
  }

  /**
   ,* Remove the inner padding in Chrome and Safari on macOS.
   ,*/

  [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  /**
   ,* 1. Correct the inability to style clickable types in iOS and Safari.
   ,* 2. Change font properties to `inherit` in Safari.
   ,*/

  ::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
  }

  /* Interactive
     ========================================================================== */

  /*
   ,* Add the correct display in Edge, IE 10+, and Firefox.
   ,*/

  details {
    display: block;
  }

  /*
   ,* Add the correct display in all browsers.
   ,*/

  summary {
    display: list-item;
  }

  /* Misc
     ========================================================================== */

  /**
   ,* Add the correct display in IE 10+.
   ,*/

  template {
    display: none;
  }

  /**
   ,* Add the correct display in IE 10.
   ,*/

  [hidden] {
    display: none;
  }
#+END_SRC
# normalize.css v8.0.0 ends here
******** normalize.css v4.1.1
#+BEGIN_SRC css :tangle no
  /*
  normalize.css: The MIT License (MIT)

  Copyright © Nicolas Gallagher and Jonathan Neal

  Permission is hereby granted, free of charge, to any person obtaining a copy of
  this software and associated documentation files (the "Software"), to deal in
  the Software without restriction, including without limitation the rights to
  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  of the Software, and to permit persons to whom the Software is furnished to do
  so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  ,*/
#+END_SRC
#+BEGIN_SRC css :tangle no
  /*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

  /**
   ,* 1. Change the default font family in all browsers (opinionated).
   ,* 2. Correct the line height in all browsers.
   ,* 3. Prevent adjustments of font size after orientation changes in IE and iOS.
   ,*/

  html {
    font-family: sans-serif; /* 1 */
    line-height: 1.15; /* 2 */
    -ms-text-size-adjust: 100%; /* 3 */
    -webkit-text-size-adjust: 100%; /* 3 */
  }

  /**
   ,* Remove the margin in all browsers (opinionated).
   ,*/

  body {
    margin: 0;
  }

  /* HTML5 display definitions
     ========================================================================== */

  /**
   ,* Add the correct display in IE 9-.
   ,* 1. Add the correct display in Edge, IE, and Firefox.
   ,* 2. Add the correct display in IE.
   ,*/

  article,
  aside,
  details, /* 1 */
  figcaption,
  figure,
  footer,
  header,
  main, /* 2 */
  menu,
  nav,
  section,
  summary { /* 1 */
    display: block;
  }

  /**
   ,* Add the correct display in IE 9-.
   ,*/

  audio,
  canvas,
  progress,
  video {
    display: inline-block;
  }

  /**
   ,* Add the correct display in iOS 4-7.
   ,*/

  audio:not([controls]) {
    display: none;
    height: 0;
  }

  /**
   ,* Add the correct vertical alignment in Chrome, Firefox, and Opera.
   ,*/

  progress {
    vertical-align: baseline;
  }

  /**
   ,* Add the correct display in IE 10-.
   ,* 1. Add the correct display in IE.
   ,*/

  template, /* 1 */
  [hidden] {
    display: none;
  }

  /* Links
     ========================================================================== */

  /**
   ,* 1. Remove the gray background on active links in IE 10.
   ,* 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
   ,*/

  a {
    background-color: transparent; /* 1 */
    -webkit-text-decoration-skip: objects; /* 2 */
  }

  /**
   ,* Remove the outline on focused links when they are also active or hovered
   ,* in all browsers (opinionated).
   ,*/

  a:active,
  a:hover {
    outline-width: 0;
  }

  /* Text-level semantics
     ========================================================================== */

  /**
   ,* 1. Remove the bottom border in Firefox 39-.
   ,* 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   ,*/

  abbr[title] {
    border-bottom: none; /* 1 */
    text-decoration: underline; /* 2 */
    text-decoration: underline dotted; /* 2 */
  }

  /**
   ,* Prevent the duplicate application of `bolder` by the next rule in Safari 6.
   ,*/

  b,
  strong {
    font-weight: inherit;
  }

  /**
   ,* Add the correct font weight in Chrome, Edge, and Safari.
   ,*/

  b,
  strong {
    font-weight: bolder;
  }

  /**
   ,* Add the correct font style in Android 4.3-.
   ,*/

  dfn {
    font-style: italic;
  }

  /**
   ,* Correct the font size and margin on `h1` elements within `section` and
   ,* `article` contexts in Chrome, Firefox, and Safari.
   ,*/

  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }

  /**
   ,* Add the correct background and color in IE 9-.
   ,*/

  mark {
    background-color: #ff0;
    color: #000;
  }

  /**
   ,* Add the correct font size in all browsers.
   ,*/

  small {
    font-size: 80%;
  }

  /**
   ,* Prevent `sub` and `sup` elements from affecting the line height in
   ,* all browsers.
   ,*/

  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  /* Embedded content
     ========================================================================== */

  /**
   ,* Remove the border on images inside links in IE 10-.
   ,*/

  img {
    border-style: none;
  }

  /**
   ,* Hide the overflow in IE.
   ,*/

  svg:not(:root) {
    overflow: hidden;
  }

  /* Grouping content
     ========================================================================== */

  /**
   ,* 1. Correct the inheritance and scaling of font size in all browsers.
   ,* 2. Correct the odd `em` font sizing in all browsers.
   ,*/

  code,
  kbd,
  pre,
  samp {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  /**
   ,* Add the correct margin in IE 8.
   ,*/

  figure {
    margin: 1em 40px;
  }

  /**
   ,* 1. Add the correct box sizing in Firefox.
   ,* 2. Show the overflow in Edge and IE.
   ,*/

  hr {
    box-sizing: content-box; /* 1 */
    height: 0; /* 1 */
    overflow: visible; /* 2 */
  }

  /* Forms
     ========================================================================== */

  /**
   ,* 1. Change font properties to `inherit` in all browsers (opinionated).
   ,* 2. Remove the margin in Firefox and Safari.
   ,*/

  button,
  input,
  optgroup,
  select,
  textarea {
    font: inherit; /* 1 */
    margin: 0; /* 2 */
  }

  /**
   ,* Restore the font weight unset by the previous rule.
   ,*/

  optgroup {
    font-weight: bold;
  }

  /**
   ,* Show the overflow in IE.
   ,* 1. Show the overflow in Edge.
   ,*/

  button,
  input { /* 1 */
    overflow: visible;
  }

  /**
   ,* Remove the inheritance of text transform in Edge, Firefox, and IE.
   ,* 1. Remove the inheritance of text transform in Firefox.
   ,*/

  button,
  select { /* 1 */
    text-transform: none;
  }

  /**
   ,* 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
   ,*    controls in Android 4.
   ,* 2. Correct the inability to style clickable types in iOS and Safari.
   ,*/

  button,
  html [type="button"], /* 1 */
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button; /* 2 */
  }

  /**
   ,* Remove the inner border and padding in Firefox.
   ,*/

  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
  }

  /**
   ,* Restore the focus styles unset by the previous rule.
   ,*/

  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  /**
   ,* Change the border, margin, and padding in all browsers (opinionated).
   ,*/

  fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  }

  /**
   ,* 1. Correct the text wrapping in Edge and IE.
   ,* 2. Correct the color inheritance from `fieldset` elements in IE.
   ,* 3. Remove the padding so developers are not caught out when they zero out
   ,*    `fieldset` elements in all browsers.
   ,*/

  legend {
    box-sizing: border-box; /* 1 */
    color: inherit; /* 2 */
    display: table; /* 1 */
    max-width: 100%; /* 1 */
    padding: 0; /* 3 */
    white-space: normal; /* 1 */
  }

  /**
   ,* Remove the default vertical scrollbar in IE.
   ,*/

  textarea {
    overflow: auto;
  }

  /**
   ,* 1. Add the correct box sizing in IE 10-.
   ,* 2. Remove the padding in IE 10-.
   ,*/

  [type="checkbox"],
  [type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
  }

  /**
   ,* Correct the cursor style of increment and decrement buttons in Chrome.
   ,*/

  [type="number"]::-webkit-inner-spin-button,
  [type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  /**
   ,* 1. Correct the odd appearance in Chrome and Safari.
   ,* 2. Correct the outline style in Safari.
   ,*/

  [type="search"] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
  }

  /**
   ,* Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
   ,*/

  [type="search"]::-webkit-search-cancel-button,
  [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  /**
   ,* Correct the text style of placeholders in Chrome, Edge, and Safari.
   ,*/

  ::-webkit-input-placeholder {
    color: inherit;
    opacity: 0.54;
  }

  /**
   ,* 1. Correct the inability to style clickable types in iOS and Safari.
   ,* 2. Change font properties to `inherit` in Safari.
   ,*/

  ::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
  }
#+END_SRC
# normalize.css v4.1.1 ends here

******** hmtlize.css
#+BEGIN_SRC css
  /* Generated from (org-html-htmlize-generate-css) with minimum
     packages loaded and default light theme */

  .org-bold {
      /* bold */
      font-weight: bold;
  }
  .org-bold-italic {
      /* bold-italic */
      font-weight: bold;
      font-style: italic;
  }
  .org-border {
  }
  .org-buffer-menu-buffer {
      /* buffer-menu-buffer */
      font-weight: bold;
  }
  .org-builtin {
      /* font-lock-builtin-face */
      color: #483d8b;
  }
  .org-button {
      /* button */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-calendar-month-header {
      /* calendar-month-header */
      color: #0000ff;
  }
  .org-calendar-today {
      /* calendar-today */
      text-decoration: underline;
  }
  .org-calendar-weekday-header {
      /* calendar-weekday-header */
      color: #008b8b;
  }
  .org-calendar-weekend-header {
      /* calendar-weekend-header */
      color: #b22222;
  }
  .org-comint-highlight-input {
      /* comint-highlight-input */
      font-weight: bold;
  }
  .org-comint-highlight-prompt {
      /* comint-highlight-prompt */
      color: #0000cd;
  }
  .org-comment {
      /* font-lock-comment-face */
      color: #b22222;
  }
  .org-comment-delimiter {
      /* font-lock-comment-delimiter-face */
      color: #b22222;
  }
  .org-constant {
      /* font-lock-constant-face */
      color: #008b8b;
  }
  .org-diary {
      /* diary */
      color: #ff0000;
  }
  .org-doc {
      /* font-lock-doc-face */
      color: #8b2252;
  }
  .org-error {
      /* error */
      color: #ff0000;
      font-weight: bold;
  }
  .org-escape-glyph {
      /* escape-glyph */
      color: #a52a2a;
  }
  .org-file-name-shadow {
      /* file-name-shadow */
      color: #7f7f7f;
  }
  .org-fixed-pitch {
  }
  .org-fringe {
      /* fringe */
      background-color: #f2f2f2;
  }
  .org-function-name {
      /* font-lock-function-name-face */
      color: #0000ff;
  }
  .org-glyphless-char {
      /* glyphless-char */
      font-size: 60%;
  }
  .org-header-line {
      /* header-line */
      color: #333333;
      background-color: #e5e5e5;
  }
  .org-help-argument-name {
      /* help-argument-name */
      font-style: italic;
  }
  .org-highlight {
      /* highlight */
      background-color: #b4eeb4;
  }
  .org-holiday {
      /* holiday */
      background-color: #ffc0cb;
  }
  .org-info-header-node {
      /* info-header-node */
      color: #a52a2a;
      font-weight: bold;
      font-style: italic;
  }
  .org-info-header-xref {
      /* info-header-xref */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-info-index-match {
      /* info-index-match */
      background-color: #ffff00;
  }
  .org-info-menu-header {
      /* info-menu-header */
      font-weight: bold;
  }
  .org-info-menu-star {
      /* info-menu-star */
      color: #ff0000;
  }
  .org-info-node {
      /* info-node */
      color: #a52a2a;
      font-weight: bold;
      font-style: italic;
  }
  .org-info-title-1 {
      /* info-title-1 */
      font-size: 172%;
      font-weight: bold;
  }
  .org-info-title-2 {
      /* info-title-2 */
      font-size: 144%;
      font-weight: bold;
  }
  .org-info-title-3 {
      /* info-title-3 */
      font-size: 120%;
      font-weight: bold;
  }
  .org-info-title-4 {
      /* info-title-4 */
      font-weight: bold;
  }
  .org-info-xref {
      /* info-xref */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-italic {
      /* italic */
      font-style: italic;
  }
  .org-keyword {
      /* font-lock-keyword-face */
      color: #a020f0;
  }
  .org-lazy-highlight {
      /* lazy-highlight */
      background-color: #afeeee;
  }
  .org-link {
      /* link */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-link-visited {
      /* link-visited */
      color: #8b008b;
      text-decoration: underline;
  }
  .org-makefile-makepp-perl {
      /* makefile-makepp-perl */
      background-color: #bfefff;
  }
  .org-makefile-shell {
  }
  .org-makefile-space {
      /* makefile-space */
      background-color: #ff69b4;
  }
  .org-makefile-targets {
      /* makefile-targets */
      color: #0000ff;
  }
  .org-match {
      /* match */
      background-color: #ffff00;
  }
  .org-negation-char {
  }
  .org-next-error {
      /* next-error */
      background-color: gtk_selection_bg_color;
  }
  .org-nobreak-space {
      /* nobreak-space */
      color: #a52a2a;
      text-decoration: underline;
  }
  .org-org-agenda-calendar-event {
      /* org-agenda-calendar-event */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-agenda-calendar-sexp {
      /* org-agenda-calendar-sexp */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-agenda-clocking {
      /* org-agenda-clocking */
      background-color: #ffff00;
  }
  .org-org-agenda-column-dateline {
      /* org-agenda-column-dateline */
      background-color: #e5e5e5;
  }
  .org-org-agenda-current-time {
      /* org-agenda-current-time */
      color: #b8860b;
  }
  .org-org-agenda-date {
      /* org-agenda-date */
      color: #0000ff;
  }
  .org-org-agenda-date-today {
      /* org-agenda-date-today */
      color: #0000ff;
      font-weight: bold;
      font-style: italic;
  }
  .org-org-agenda-date-weekend {
      /* org-agenda-date-weekend */
      color: #0000ff;
      font-weight: bold;
  }
  .org-org-agenda-diary {
      /* org-agenda-diary */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-agenda-dimmed-todo {
      /* org-agenda-dimmed-todo-face */
      color: #7f7f7f;
  }
  .org-org-agenda-done {
      /* org-agenda-done */
      color: #228b22;
  }
  .org-org-agenda-filter-category {
      /* org-agenda-filter-category */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-filter-effort {
      /* org-agenda-filter-effort */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-filter-regexp {
      /* org-agenda-filter-regexp */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-filter-tags {
      /* org-agenda-filter-tags */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-restriction-lock {
      /* org-agenda-restriction-lock */
      background-color: #eeeeee;
  }
  .org-org-agenda-structure {
      /* org-agenda-structure */
      color: #0000ff;
  }
  .org-org-archived {
      /* org-archived */
      color: #7f7f7f;
  }
  .org-org-block {
      /* org-block */
      color: #7f7f7f;
  }
  .org-org-block-begin-line {
      /* org-block-begin-line */
      color: #b22222;
  }
  .org-org-block-end-line {
      /* org-block-end-line */
      color: #b22222;
  }
  .org-org-checkbox {
      /* org-checkbox */
      font-weight: bold;
  }
  .org-org-checkbox-statistics-done {
      /* org-checkbox-statistics-done */
      color: #228b22;
      font-weight: bold;
  }
  .org-org-checkbox-statistics-todo {
      /* org-checkbox-statistics-todo */
      color: #ff0000;
      font-weight: bold;
  }
  .org-org-clock-overlay {
      /* org-clock-overlay */
      color: #000000;
      background-color: #d3d3d3;
  }
  .org-org-code {
      /* org-code */
      color: #7f7f7f;
  }
  .org-org-column {
      /* org-column */
      background-color: #e5e5e5;
  }
  .org-org-column-title {
      /* org-column-title */
      background-color: #e5e5e5;
      font-weight: bold;
      text-decoration: underline;
  }
  .org-org-date {
      /* org-date */
      color: #a020f0;
      text-decoration: underline;
  }
  .org-org-date-selected {
      /* org-date-selected */
      color: #ff0000;
  }
  .org-org-default {
      /* org-default */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-document-info {
      /* org-document-info */
      color: #191970;
  }
  .org-org-document-info-keyword {
      /* org-document-info-keyword */
      color: #7f7f7f;
  }
  .org-org-document-title {
      /* org-document-title */
      color: #191970;
      font-weight: bold;
  }
  .org-org-done {
      /* org-done */
      color: #228b22;
      font-weight: bold;
  }
  .org-org-drawer {
      /* org-drawer */
      color: #0000ff;
  }
  .org-org-ellipsis {
      /* org-ellipsis */
      color: #b8860b;
      text-decoration: underline;
  }
  .org-org-footnote {
      /* org-footnote */
      color: #a020f0;
      text-decoration: underline;
  }
  .org-org-formula {
      /* org-formula */
      color: #b22222;
  }
  .org-org-headline-done {
      /* org-headline-done */
      color: #bc8f8f;
  }
  .org-org-hide {
      /* org-hide */
      color: #ffffff;
  }
  .org-org-latex-and-related {
      /* org-latex-and-related */
      color: #8b4513;
  }
  .org-org-level-1 {
      /* org-level-1 */
      color: #0000ff;
  }
  .org-org-level-2 {
      /* org-level-2 */
      color: #a0522d;
  }
  .org-org-level-3 {
      /* org-level-3 */
      color: #a020f0;
  }
  .org-org-level-4 {
      /* org-level-4 */
      color: #b22222;
  }
  .org-org-level-5 {
      /* org-level-5 */
      color: #228b22;
  }
  .org-org-level-6 {
      /* org-level-6 */
      color: #008b8b;
  }
  .org-org-level-7 {
      /* org-level-7 */
      color: #483d8b;
  }
  .org-org-level-8 {
      /* org-level-8 */
      color: #8b2252;
    }
  .org-org-link {
      /* org-link */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-org-list-dt {
      /* org-list-dt */
      font-weight: bold;
  }
  .org-org-macro {
      /* org-macro */
      color: #8b4513;
  }
  .org-org-meta-line {
      /* org-meta-line */
      color: #b22222;
  }
  .org-org-mode-line-clock {
      /* org-mode-line-clock */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-mode-line-clock-overrun {
      /* org-mode-line-clock-overrun */
      color: #000000;
      background-color: #ff0000;
  }
  .org-org-priority {
      /* org-priority */
      color: #a020f0;
  }
  .org-org-property-value {
  }
  .org-org-quote {
      /* org-quote */
      color: #7f7f7f;
  }
  .org-org-scheduled {
      /* org-scheduled */
      color: #006400;
  }
  .org-org-scheduled-previously {
      /* org-scheduled-previously */
      color: #b22222;
  }
  .org-org-scheduled-today {
      /* org-scheduled-today */
      color: #006400;
  }
  .org-org-sexp-date {
      /* org-sexp-date */
      color: #a020f0;
  }
  .org-org-special-keyword {
      /* org-special-keyword */
      color: #a020f0;
  }
  .org-org-table {
      /* org-table */
      color: #0000ff;
  }
  .org-org-tag {
      /* org-tag */
      font-weight: bold;
  }
  .org-org-tag-group {
      /* org-tag-group */
      font-weight: bold;
  }
  .org-org-target {
      /* org-target */
      text-decoration: underline;
  }
  .org-org-time-grid {
      /* org-time-grid */
      color: #b8860b;
  }
  .org-org-todo {
      /* org-todo */
      color: #ff0000;
      font-weight: bold;
  }
  .org-org-upcoming-deadline {
      /* org-upcoming-deadline */
      color: #b22222;
  }
  .org-org-verbatim {
      /* org-verbatim */
      color: #7f7f7f;
  }
  .org-org-verse {
      /* org-verse */
      color: #7f7f7f;
  }
  .org-org-warning {
      /* org-warning */
      color: #ff0000;
      font-weight: bold;
  }
  .org-outline-1 {
      /* outline-1 */
      color: #0000ff;
  }
  .org-outline-2 {
      /* outline-2 */
      color: #a0522d;
  }
  .org-outline-3 {
      /* outline-3 */
      color: #a020f0;
  }
  .org-outline-4 {
      /* outline-4 */
      color: #b22222;
  }
  .org-outline-5 {
      /* outline-5 */
      color: #228b22;
  }
  .org-outline-6 {
      /* outline-6 */
      color: #008b8b;
  }
  .org-outline-7 {
      /* outline-7 */
      color: #483d8b;
  }
  .org-outline-8 {
      /* outline-8 */
      color: #8b2252;
  }
  .org-preprocessor {
      /* font-lock-preprocessor-face */
      color: #483d8b;
  }
  .org-regexp-grouping-backslash {
      /* font-lock-regexp-grouping-backslash */
      font-weight: bold;
  }
  .org-regexp-grouping-construct {
      /* font-lock-regexp-grouping-construct */
      font-weight: bold;
  }
  .org-region {
      /* region */
      background-color: gtk_selection_bg_color;
  }
  .org-secondary-selection {
      /* secondary-selection */
      background-color: #ffff00;
  }
  .org-shadow {
      /* shadow */
      color: #7f7f7f;
  }
  .org-show-paren-match {
      /* show-paren-match */
      background-color: #40e0d0;
  }
  .org-show-paren-mismatch {
      /* show-paren-mismatch */
      color: #ffffff;
      background-color: #a020f0;
  }
  .org-string {
      /* font-lock-string-face */
      color: #8b2252;
  }
  .org-success {
      /* success */
      color: #228b22;
      font-weight: bold;
  }
  .org-table-cell {
      /* table-cell */
      color: #e5e5e5;
      background-color: #0000ff;
  }
  .org-tooltip {
      /* tooltip */
      color: #000000;
      background-color: #ffffe0;
  }
  .org-trailing-whitespace {
      /* trailing-whitespace */
      background-color: #ff0000;
  }
  .org-type {
      /* font-lock-type-face */
      color: #228b22;
  }
  .org-underline {
      /* underline */
      text-decoration: underline;
  }
  .org-variable-name {
      /* font-lock-variable-name-face */
      color: #a0522d;
  }
  .org-variable-pitch {
  }
  .org-vertical-border {
  }
  .org-warning {
      /* warning */
      color: #ff8c00;
      font-weight: bold;
  }
  .org-warning-1 {
      /* font-lock-warning-face */
      color: #ff0000;
      font-weight: bold;
  }
#+END_SRC
# htmlize.css ends here

******** orgstyle.css (*goto-PARENT-outline-and-tangle*)
#+BEGIN_SRC css
  /*
  orgstyle.css: derived from org.css @ https://github.com/gongzhitaao/orgcss.git
  A tutorial documentation for org.css ("CSS for Org-exported HTML") is available at
  https://gongzhitaao.org/orgcss/

  org.css: MIT License

  Copyright (c) 2016 gongzhitaao

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ,*/
#+END_SRC
#+BEGIN_SRC css :tangle no
  $sans: Helvetica, sans-serif;
  $serif: Georgia, serif;
  $monospace: Lucida Console, monospace;
  $code-size: 80%;
  $smaller: 90%;
  $max-width: 710px;

  body {
      width: 95%;
      margin: 2% auto;
      font-size: 14px;
      line-height: 1.4em;
      font-family: $serif;
      color: #333;
  }

  @media screen and (min-width: 600px) {
      body {
          font-size: 18px;
      }
  }

  @media screen and (min-width: 910px) {
      body {
          width: 900px;
      }
  }

  ::selection {
      background: #D6EDFF;
  }

  p {
      margin: 0 auto;
  }

  ol,ul {
      margin: 0 auto;
  }

  dl {
      margin: 0 auto;
  }

  .title {
      text-align: center;
      margin: 0.8em auto;
      color: black;
  }

  .subtitle {
      text-align: center;
      font-size: 1.1em;
      line-height: 1.4;
      font-weight: bold;
      margin: 1em auto;
  }

  .abstract {
      margin: auto;
      width: 80%;
      font-style: italic;
  }

  .abstract p:last-of-type:before {
      content: "    ";
      white-space: pre;
  }

  .status {
      font-size: $smaller;
      margin: 2em auto;
  }

  [class^="section-number-"] {
      margin-right: .5em;
  }

  [id^="orgheadline"] {
      clear: both;
  }

  #footnotes {
      font-size: $smaller;
  }

  .footpara {
      display: inline;
      margin: .2em auto;
  }

  .footdef {
      margin-bottom: 1em;
  }

  .footdef sup {
      padding-right: .5em;
  }

  a {
      color: #527d9a;
      text-decoration: none;
  }

  a:hover {
      color: #003355;
      border-bottom: 1px dotted;
  }

  figure {
      padding: 0px;
      margin: 1em auto;
      text-align: center;
  }

  img {
      max-width: 100%;
      vertical-align: middle;
  }

  .MathJax_Display {
      font-size: $smaller;
      margin: 0!important;
      width: $smaller!important;
  }

  h1,h2,h3,h4,h5,h6 {
      color: #A5573E;
      line-height: 1em;
      font-family: $sans;
  }

  h1,h2,h3 {
      line-height: 1.4em;
  }

  h4,h5,h6 {
      font-size: 1em;
  }

  @media screen and (min-width: 600px) {
      h1 {
          font-size: 2em;
      }
      h2 {
          font-size: 1.5em;
      }
      h3 {
          font-size: 1.3em;
      }
      h1,h2,h3 {
          line-height: 1.4em;
      }
      h4,h5,h6 {
          font-size: 1.1em;
      }
  }

  dt {
      font-weight: bold;
  }

  /* table */

  table {
      margin: 1em auto;
      border-top: 2px solid;
      border-bottom: 2px solid;
      border-collapse: collapse;
  }

  thead {
      border-bottom: 2px solid;
  }

  table td + td, table th + th {
      border-left: 1px solid gray;
  }

  table tr {
      border-top: 1px solid lightgray;
  }

  td,th {
      padding: 0.3em 0.6em;
      vertical-align: middle;
  }

  caption.t-above {
      caption-side: top;
  }

  caption.t-bottom {
      caption-side: bottom;
  }

  caption {
      margin-bottom: 0.3em;
  }

  figcaption {
      margin-top: 0.3em;
  }

  th.org-right {
      text-align: center;
  }

  th.org-left {
      text-align: center;
  }

  th.org-center {
      text-align: center;
  }

  td.org-right {
      text-align: right;
  }

  td.org-left {
      text-align: left;
  }

  td.org-center {
      text-align: center;
  }

  blockquote {
      margin: 1em 2em;
      padding-left: 1em;
      border-left: 3px solid #ccc;
  }

  kbd {
      background-color: #f7f7f7;
      font-size: $code-size;
      margin: 0 .1em;
      padding: .1em .6em;
  }

  .todo {
      background-color: red;
      color: white;
      padding: .1em 0.3em;
      border-radius: 3px;
      background-clip: padding-box;
      font-size: $code-size;
      font-family: $monospace;
      line-height: 1;
  }

  .done {
      background-color: green;
      color: white;
      padding: .1em 0.3em;
      border-radius: 3px;
      background-clip: padding-box;
      font-size: $code-size;
      font-family: $monospace;
      line-height: 1;
  }

  .priority {
      color: orange;
      font-family: $monospace;
  }

  /* Because tag span is set to float.  This is more like a hacking.  Maybe we
     need a cleaner solution. */
  #table-of-contents li {
      clear: both;
  }

  .tag {
      font-family: $monospace;
      font-size: 0.7em;
      font-weight: normal;
  }

  .tag span {
      padding: 0.3em 0.3em;
      float: right;
      margin-right: .5em;
      border: 1px solid #bbb;
      border-radius: 3px;
      background-clip: padding-box;
      color: #333;
      background-color: #eee;
      line-height: 1;
  }

  .timestamp {
      color: #bebebe;
      font-size: $smaller;
  }

  .timestamp-kwd {
      color: #5f9ea0;
  }

  .org-right {
      margin-left: auto;
      margin-right: 0px;
      text-align: right;
  }

  .org-left {
      margin-left: 0px;
      margin-right: auto;
      text-align: left;
  }

  .org-center {
      margin-left: auto;
      margin-right: auto;
      text-align: center;
  }

  .underline {
      text-decoration: underline;
  }

  #postamble p, #preamble p {
      font-size: $smaller;
      margin: .2em;
  }

  p.verse {
      margin-left: 3%;
  }

  :not(pre) > code {
      padding: 2px 5px;
      margin: auto 1px;
      border: 1px solid #DDD;
      border-radius: 3px;
      background-clip: padding-box;
      color: #333;
      font-size: $code-size;
  }

  .org-src-container {
      border: 1px solid #ccc;
      box-shadow: 3px 3px 3px #eee;
      font-family: $monospace;
      font-size: $code-size;
      margin: 1em auto;
      padding: 0.1em 0.5em;
      position: relative;
  }

  .org-src-container>pre {
      overflow: auto;
  }

  .org-src-container>pre:before {
      display: block;
      position: absolute;
      background-color: #b3b3b3;
      top: 0;
      right: 0;
      padding: 0 0.5em;
      border-bottom-left-radius: 8px;
      border: 0;
      color: white;
      font-size: $code-size;
  }

  /* from http://demo.thi.ng/org-spec/ */

  .org-src-container>pre.src-sh:before {
      content: 'sh';
  }
  .org-src-container>pre.src-bash:before {
      content: 'bash';
  }
  .org-src-container>pre.src-emacs-lisp:before {
      content: 'Emacs Lisp';
  }
  .org-src-container>pre.src-R:before {
      content: 'R';
  }
  .org-src-container>pre.src-org:before {
      content: 'Org';
  }
  .org-src-container>pre.src-cpp:before {
      content: 'C++';
  }
  .org-src-container>pre.src-c:before {
      content: 'C';
  }
  .org-src-container>pre.src-html:before {
      content: 'HTML'
  }
  .org-src-container>pre.src-js:before {
      content: 'Javascript'
  }
  .org-src-container>pre.src-javascript:before {
      content: 'Javascript'
  }

  // More languages from http://orgmode.org/worg/org-contrib/babel/languages.html

  .org-src-container>pre.src-abc:before {
      content: 'ABC';
  }
  .org-src-container>pre.src-asymptote:before {
      content: 'Asymptote';
  }
  .org-src-container>pre.src-awk:before {
      content: 'Awk';
  }
  .org-src-container>pre.src-C:before {
      content: 'C';
  }
  .org-src-container>pre.src-calc:before {
      content: 'Calc';
  }
  .org-src-container>pre.src-clojure:before {
      content: 'Clojure';
  }
  .org-src-container>pre.src-comint:before {
      content: 'comint';
  }
  .org-src-container>pre.src-css:before {
      content: 'CSS';
  }
  .org-src-container>pre.src-D:before {
      content: 'D';
  }
  .org-src-container>pre.src-ditaa:before {
      content: 'Ditaa';
  }
  .org-src-container>pre.src-dot:before {
      content: 'Dot';
  }
  .org-src-container>pre.src-ebnf:before {
      content: 'ebnf';
  }
  .org-src-container>pre.src-forth:before {
      content: 'Forth';
  }
  .org-src-container>pre.src-F90:before {
      content: 'Fortran';
  }
  .org-src-container>pre.src-gnuplot:before {
      content: 'Gnuplot';
  }
  .org-src-container>pre.src-haskell:before {
      content: 'Haskell';
  }
  .org-src-container>pre.src-io:before {
      content: 'Io';
  }
  .org-src-container>pre.src-java:before {
      content: 'Java';
  }
  .org-src-container>pre.src-latex:before {
      content: 'LaTeX';
  }
  .org-src-container>pre.src-ledger:before {
      content: 'Ledger';
  }
  .org-src-container>pre.src-ly:before {
      content: 'Lilypond';
  }
  .org-src-container>pre.src-lisp:before {
      content: 'Lisp';
  }
  .org-src-container>pre.src-makefile:before {
      content: 'Make';
  }
  .org-src-container>pre.src-matlab:before {
      content: 'Matlab';
  }
  .org-src-container>pre.src-max:before {
      content: 'Maxima';
  }
  .org-src-container>pre.src-mscgen:before {
      content: 'Mscgen';
  }
  .org-src-container>pre.src-Caml:before {
      content: 'Objective';
  }
  .org-src-container>pre.src-octave:before {
      content: 'Octave';
  }
  .org-src-container>pre.src-org:before {
      content: 'Org';
  }
  .org-src-container>pre.src-perl:before {
      content: 'Perl';
  }
  .org-src-container>pre.src-picolisp:before {
      content: 'Picolisp';
  }
  .org-src-container>pre.src-plantuml:before {
      content: 'PlantUML';
  }
  .org-src-container>pre.src-python:before {
      content: 'Python';
  }
  .org-src-container>pre.src-ruby:before {
      content: 'Ruby';
  }
  .org-src-container>pre.src-sass:before {
      content: 'Sass';
  }
  .org-src-container>pre.src-scala:before {
      content: 'Scala';
  }
  .org-src-container>pre.src-scheme:before {
      content: 'Scheme';
  }
  .org-src-container>pre.src-screen:before {
      content: 'Screen';
  }
  .org-src-container>pre.src-sed:before {
      content: 'Sed';
  }
  .org-src-container>pre.src-shell:before {
      content: 'shell';
  }
  .org-src-container>pre.src-shen:before {
      content: 'Shen';
  }
  .org-src-container>pre.src-sql:before {
      content: 'SQL';
  }
  .org-src-container>pre.src-sqlite:before {
      content: 'SQLite';
  }
  .org-src-container>pre.src-stan:before {
      content: 'Stan';
  }
  .org-src-container>pre.src-vala:before {
      content: 'Vala';
  }
  .org-src-container>pre.src-axiom:before {
      content: 'Axiom';
  }
  .org-src-container>pre.src-browser:before {
      content: 'HTML';
  }
  .org-src-container>pre.src-cypher:before {
      content: 'Neo4j';
  }
  .org-src-container>pre.src-elixir:before {
      content: 'Elixir';
  }
  .org-src-container>pre.src-request:before {
      content: 'http';
  }
  .org-src-container>pre.src-ipython:before {
      content: 'iPython';
  }
  .org-src-container>pre.src-kotlin:before {
      content: 'Kotlin';
  }
  .org-src-container>pre.src-Flavored Erlang  lfe:before {
      content: 'Lisp';
  }
  .org-src-container>pre.src-mongo:before {
      content: 'MongoDB';
  }
  .org-src-container>pre.src-prolog:before {
      content: 'Prolog';
  }
  .org-src-container>pre.src-rec:before {
      content: 'rec';
  }
  .org-src-container>pre.src-ML  sml:before {
      content: 'Standard';
  }
  .org-src-container>pre.src-Translate  translate:before {
      content: 'Google';
  }
  .org-src-container>pre.src-typescript:before {
      content: 'Typescript';
  }
  .org-src-container>pre.src-rust:before {
      content: 'Rust';
  }

  .inlinetask {
      background: #ffffcc;
      border: 2px solid gray;
      margin: 10px;
      padding: 10px;
  }

  #org-div-home-and-up {
      font-size: 70%;
      text-align: right;
      white-space: nowrap;
  }

  .linenr {
      font-size: $smaller;
  }

  .code-highlighted {
      background-color: #ffff00;
  }

  #bibliography {
      font-size: $smaller;
  }

  #bibliography table {
      width: 100%;
  }

  .creator {
      display: block;
  }

  @media screen and (min-width: 600px) {
      .creator {
          display: inline;
          float: right;
      }
  }
#+END_SRC
#+BEGIN_SRC css
  body {
      width:95%;
      margin:2% auto;
      font-size:14px;
      line-height:1.4em;
      font-family:Georgia,serif;
      color:#333
  }

  @media screen and (min-width:600px) {
      body {
          font-size:18px
      }
  }

  @media screen and (min-width:910px) {
      body {
          width:900px
      }
  }

  ::-moz-selection {
      background:#d6edff
  }

  ::selection {
      background:#d6edff
  }

  dl,ol,p,ul {
      margin:0 auto
  }

  .title {
      margin:.8em auto;
      color:#000
  }

  .subtitle,.title {
      text-align:center
  }

  .subtitle {
      font-size:1.1em;
      line-height:1.4;
      font-weight:700;
      margin:1em auto
  }


  /* -- */
  .mainsail {
      margin:.8em auto;
      color:#A53539/*#000*/
  }

  .headsail,.mainsail {
      text-align:center
  }

  .headsail {
      font-size:1.1em;
      line-height:1.4;
      font-weight:700;
      margin:1em auto;
      color:#B9543C
  }


  compass a {
      background: none;
  }

  compass {
      font-family: $monospace;
      font-weight: 700;
      text-transform: uppercase;
      padding: 0;
      margin: 0;
      hyphens: none;
  }

  compass {
      margin-top: 1em;
      font-size: 1rem;
  }

  compass > a {
      margin: 0 1ex;
      color:#FF8C00;
  }
  /* -- */


  .abstract {
      margin:auto;
      width:80%;
      font-style:italic
  }

  .abstract p:last-of-type:before {
      content:"    ";
      white-space:pre
  }

  .status {
      font-size:90%;
      margin:2em auto
  }

  [class^=section-number-] {
      margin-right:.5em
  }

  [id^=orgheadline] {
      clear:both
  }

  #footnotes {
      font-size:90%
  }

  .footpara {
      display:inline;
      margin:.2em auto
  }

  .footdef {
      margin-bottom:1em
  }

  .footdef sup {
      padding-right:.5em
  }

  a {
      color:#527d9a;
      text-decoration:none
  }

  a:hover {
      color:#035;
      border-bottom:1px dotted
  }

  figure {
      padding:0;
      margin:1em auto;
      text-align:center
  }

  img {
      max-width:100%;
      vertical-align:middle
  }

  .MathJax_Display {
      font-size:90%;
      margin:0!important;
      width:90%!important
  }

  h1,h2,h3,h4,h5,h6 {
      color:#a5573e;
      line-height:1em;
      font-family:Helvetica,sans-serif
  }

  h1,h2,h3 {
      line-height:1.4em
  }

  h4,h5,h6 {
      font-size:1em
  }

  @media screen and (min-width:600px) {
      h1 {
          font-size:2em
      }
      h2 {
          font-size:1.5em
      }
      h3 {
          font-size:1.3em
      }
      h1,h2,h3 {
          line-height:1.4em
      }
      h4,h5,h6 {
          font-size:1.1em
      }
  }

  dt {
      font-weight:700
  }

  table {
      margin:1em auto;
      border-top:2px solid;
      border-collapse:collapse
  }

  table,thead {
      border-bottom:2px solid
  }

  table td+td,table th+th {
      border-left:1px solid gray
  }

  table tr {
      border-top:1px solid #d3d3d3
  }

  td,th {
      padding:.3em .6em;
      vertical-align:middle
  }

  caption.t-above {
      caption-side:top
  }

  caption.t-bottom {
      caption-side:bottom
  }

  caption {
      margin-bottom:.3em
  }

  figcaption {
      margin-top:.3em
  }

  th.org-center,th.org-left,th.org-right {
      text-align:center
  }

  td.org-right {
      text-align:right
  }

  td.org-left {
      text-align:left
  }

  td.org-center {
      text-align:center
  }

  blockquote {
      margin:1em 2em;
      padding-left:1em;
      border-left:3px solid #ccc
  }

  kbd {
      background-color:#f7f7f7;
      font-size:80%;
      margin:0 .1em;
      padding:.1em .6em
      }

  .todo {
      background-color:red
  }

  .done,.todo {
      color:#fff;
      padding:.1em .3em;
      border-radius:3px;
      background-clip:padding-box;
      font-size:80%;
      font-family:Lucida Console,monospace;
      line-height:1
  }

  .done {
      background-color:green
  }

  .priority {
      color:orange;
      font-family:Lucida Console,monospace
  }

  #table-of-contents li {
      clear:both
  }

  .tag {
      font-family:Lucida Console,monospace;
      font-size:.7em;
      font-weight:400
  }

  .tag span {
      padding:.3em;
      float:right;
      margin-right:.5em;
      border:1px solid #bbb;
      border-radius:3px;
      background-clip:padding-box;
      color:#333;
      background-color:#eee;
      line-height:1
  }

  .timestamp {
      color:#bebebe;
      font-size:90%
  }

  .timestamp-kwd {
      color:#5f9ea0
  }

  .org-right {
      margin-left:auto;
      margin-right:0;
      text-align:right
  }

  .org-left {
      margin-left:0;
      margin-right:auto;
      text-align:left
  }

  .org-center {
      margin-left:auto;
      margin-right:auto;
      text-align:center
  }

  .underline {
      text-decoration:underline
  }

  #postamble p,#preamble p {
      font-size:90%;
      margin:.2em
  }

  p.verse {
      margin-left:3%
  }

  :not(pre)>code {
      padding:2px 5px;
      margin:auto 1px;
      border:1px solid #ddd;
      border-radius:3px;
      background-clip:padding-box;
      color:#333;
      font-size:80%
  }

  .org-src-container {
      border:1px solid #ccc;
      box-shadow:3px 3px 3px #eee;
      font-family:Lucida Console,monospace;
      font-size:80%;
      margin:1em auto;
      padding:.1em .5em;
      position:relative
  }

  .org-src-container>pre {
      overflow:auto
  }

  .org-src-container>pre:before {
      display:block;
      position:absolute;
      background-color:#b3b3b3;
      top:0;
      right:0;
      padding:0 .5em;
      border-bottom-left-radius:8px;
      border:0;
      color:#fff;
      font-size:80%
  }

  .org-src-container>pre.src-sh:before {
      content:"sh"
  }

  .org-src-container>pre.src-bash:before {
      content:"bash"
  }

  .org-src-container>pre.src-emacs-lisp:before {
      content:"Emacs Lisp"
  }

  .org-src-container>pre.src-R:before {
      content:"R"
  }

  .org-src-container>pre.src-cpp:before {
      content:"C++"
  }

  .org-src-container>pre.src-c:before {
      content:"C"
  }

  .org-src-container>pre.src-html:before {
      content:"HTML"
  }

  .org-src-container>pre.src-javascript:before,.org-src-container>pre.src-js:before {
      content:"Javascript"
  }

  // more languages 0% http://orgmode.org/worg/org-contrib/babel/languages.html .org-src-container>pre.src-abc:before {
      content:"ABC"
  }

  .org-src-container>pre.src-asymptote:before {
      content:"Asymptote"
  }

  .org-src-container>pre.src-awk:before {
      content:"Awk"
  }

  .org-src-container>pre.src-C:before {
      content:"C"
  }

  .org-src-container>pre.src-calc:before {
      content:"Calc"
  }

  .org-src-container>pre.src-clojure:before {
      content:"Clojure"
  }

  .org-src-container>pre.src-comint:before {
      content:"comint"
  }

  .org-src-container>pre.src-css:before {
      content:"CSS"
  }

  .org-src-container>pre.src-D:before {
      content:"D"
  }

  .org-src-container>pre.src-ditaa:before {
      content:"Ditaa"
  }

  .org-src-container>pre.src-dot:before {
      content:"Dot"
  }

  .org-src-container>pre.src-ebnf:before {
      content:"ebnf"
  }

  .org-src-container>pre.src-forth:before {
      content:"Forth"
  }

  .org-src-container>pre.src-F90:before {
      content:"Fortran"
  }

  .org-src-container>pre.src-gnuplot:before {
      content:"Gnuplot"
  }

  .org-src-container>pre.src-haskell:before {
      content:"Haskell"
  }

  .org-src-container>pre.src-io:before {
      content:"Io"
  }

  .org-src-container>pre.src-java:before {
      content:"Java"
  }

  .org-src-container>pre.src-latex:before {
      content:"LaTeX"
  }

  .org-src-container>pre.src-ledger:before {
      content:"Ledger"
  }

  .org-src-container>pre.src-ly:before {
      content:"Lilypond"
  }

  .org-src-container>pre.src-lisp:before {
      content:"Lisp"
  }

  .org-src-container>pre.src-makefile:before {
      content:"Make"
  }

  .org-src-container>pre.src-matlab:before {
      content:"Matlab"
  }

  .org-src-container>pre.src-max:before {
      content:"Maxima"
  }

  .org-src-container>pre.src-mscgen:before {
      content:"Mscgen"
  }

  .org-src-container>pre.src-Caml:before {
      content:"Objective"
  }

  .org-src-container>pre.src-octave:before {
      content:"Octave"
  }

  .org-src-container>pre.src-org:before {
      content:"Org"
  }

  .org-src-container>pre.src-perl:before {
      content:"Perl"
  }

  .org-src-container>pre.src-picolisp:before {
      content:"Picolisp"
  }

  .org-src-container>pre.src-plantuml:before {
      content:"PlantUML"
  }

  .org-src-container>pre.src-python:before {
      content:"Python"
  }

  .org-src-container>pre.src-ruby:before {
      content:"Ruby"
  }

  .org-src-container>pre.src-sass:before {
      content:"Sass"
  }

  .org-src-container>pre.src-scala:before {
      content:"Scala"
  }

  .org-src-container>pre.src-scheme:before {
      content:"Scheme"
  }

  .org-src-container>pre.src-screen:before {
      content:"Screen"
  }

  .org-src-container>pre.src-sed:before {
      content:"Sed"
  }

  .org-src-container>pre.src-shell:before {
      content:"shell"
  }

  .org-src-container>pre.src-shen:before {
      content:"Shen"
  }

  .org-src-container>pre.src-sql:before {
      content:"SQL"
  }

  .org-src-container>pre.src-sqlite:before {
      content:"SQLite"
  }

  .org-src-container>pre.src-stan:before {
      content:"Stan"
  }

  .org-src-container>pre.src-vala:before {
      content:"Vala"
  }

  .org-src-container>pre.src-axiom:before {
      content:"Axiom"
  }

  .org-src-container>pre.src-browser:before {
      content:"HTML"
  }

  .org-src-container>pre.src-cypher:before {
      content:"Neo4j"
  }

  .org-src-container>pre.src-elixir:before {
      content:"Elixir"
  }

  .org-src-container>pre.src-request:before {
      content:"http"
  }

  .org-src-container>pre.src-ipython:before {
      content:"iPython"
  }

  .org-src-container>pre.src-kotlin:before {
      content:"Kotlin"
  }

  .org-src-container>pre.src-Flavored erlang lfe:before {
      content:"Lisp"
  }

  .org-src-container>pre.src-mongo:before {
      content:"MongoDB"
  }

  .org-src-container>pre.src-prolog:before {
      content:"Prolog"
  }

  .org-src-container>pre.src-rec:before {
      content:"rec"
  }

  .org-src-container>pre.src-ML sml:before {
      content:"Standard"
  }

  .org-src-container>pre.src-Translate translate:before {
      content:"Google"
  }

  .org-src-container>pre.src-typescript:before {
      content:"Typescript"
  }

  .org-src-container>pre.src-rust:before {
      content:"Rust"
  }


  .inlinetask {
      background:#ffc;
      border:2px solid gray;
      margin:10px;
      padding:10px
  }

  #org-div-home-and-up {
      font-size:70%;
      text-align:right;
      white-space:nowrap
  }

  .linenr {
      font-size:90%
  }

  .code-highlighted {
      background-color:#ff0
  }

  #bibliography {
      font-size:90%
  }

  #bibliography table {
      width:100%
  }

  .creator {
      display:block
  }

  @media screen and (min-width:600px) {
      .creator {
          display:inline;
          float:right
      }
  }
#+END_SRC

# orgstyle.css ends here
******* normalize.css v8.0.0
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/normalize.css
:END:
#+BEGIN_SRC css
  /*
  normalize.css: The MIT License (MIT)

  Copyright © Nicolas Gallagher and Jonathan Neal

  Permission is hereby granted, free of charge, to any person obtaining a copy of
  this software and associated documentation files (the "Software"), to deal in
  the Software without restriction, including without limitation the rights to
  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  of the Software, and to permit persons to whom the Software is furnished to do
  so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  ,*/
#+END_SRC
#+BEGIN_SRC css
    /*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */

    /* Document
       ========================================================================== */

    /**
     ,* 1. Correct the line height in all browsers.
     ,* 2. Prevent adjustments of font size after orientation changes in iOS.
     ,*/

    html {
      line-height: 1.15; /* 1 */
      -webkit-text-size-adjust: 100%; /* 2 */
    }

    /* Sections
       ========================================================================== */

    /**
     ,* Remove the margin in all browsers.
     ,*/

    body {
      margin: 0;
    }

    /**
     ,* Correct the font size and margin on `h1` elements within `section` and
     ,* `article` contexts in Chrome, Firefox, and Safari.
     ,*/

    h1 {
      font-size: 2em;
      margin: 0.67em 0;
    }

    /* Grouping content
       ========================================================================== */

    /**
     ,* 1. Add the correct box sizing in Firefox.
     ,* 2. Show the overflow in Edge and IE.
     ,*/

    hr {
      box-sizing: content-box; /* 1 */
      height: 0; /* 1 */
      overflow: visible; /* 2 */
    }

    /**
     ,* 1. Correct the inheritance and scaling of font size in all browsers.
     ,* 2. Correct the odd `em` font sizing in all browsers.
     ,*/

    pre {
      font-family: monospace, monospace; /* 1 */
      font-size: 1em; /* 2 */
    }

    /* Text-level semantics
       ========================================================================== */

    /**
     ,* Remove the gray background on active links in IE 10.
     ,*/

    a {
      background-color: transparent;
    }

    /**
     ,* 1. Remove the bottom border in Chrome 57-
     ,* 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     ,*/

    abbr[title] {
      border-bottom: none; /* 1 */
      text-decoration: underline; /* 2 */
      text-decoration: underline dotted; /* 2 */
    }

    /**
     ,* Add the correct font weight in Chrome, Edge, and Safari.
     ,*/

    b,
    strong {
      font-weight: bolder;
    }

    /**
     ,* 1. Correct the inheritance and scaling of font size in all browsers.
     ,* 2. Correct the odd `em` font sizing in all browsers.
     ,*/

    code,
    kbd,
    samp {
      font-family: monospace, monospace; /* 1 */
      font-size: 1em; /* 2 */
    }

    /**
     ,* Add the correct font size in all browsers.
     ,*/

    small {
      font-size: 80%;
    }

    /**
     ,* Prevent `sub` and `sup` elements from affecting the line height in
     ,* all browsers.
     ,*/

    sub,
    sup {
      font-size: 75%;
      line-height: 0;
      position: relative;
      vertical-align: baseline;
    }

    sub {
      bottom: -0.25em;
    }

    sup {
      top: -0.5em;
    }

    /* Embedded content
       ========================================================================== */

    /**
     ,* Remove the border on images inside links in IE 10.
     ,*/

    img {
      border-style: none;
    }

    /* Forms
       ========================================================================== */

    /**
     ,* 1. Change the font styles in all browsers.
     ,* 2. Remove the margin in Firefox and Safari.
     ,*/

    button,
    input,
    optgroup,
    select,
    textarea {
      font-family: inherit; /* 1 */
      font-size: 100%; /* 1 */
      line-height: 1.15; /* 1 */
      margin: 0; /* 2 */
    }

    /**
     ,* Show the overflow in IE.
     ,* 1. Show the overflow in Edge.
     ,*/

    button,
    input { /* 1 */
      overflow: visible;
    }

    /**
     ,* Remove the inheritance of text transform in Edge, Firefox, and IE.
     ,* 1. Remove the inheritance of text transform in Firefox.
     ,*/

    button,
    select { /* 1 */
      text-transform: none;
    }

    /**
     ,* Correct the inability to style clickable types in iOS and Safari.
     ,*/

    button,
    [type="button"],
    [type="reset"],
    [type="submit"] {
      -webkit-appearance: button;
    }

    /**
     ,* Remove the inner border and padding in Firefox.
     ,*/

    button::-moz-focus-inner,
    [type="button"]::-moz-focus-inner,
    [type="reset"]::-moz-focus-inner,
    [type="submit"]::-moz-focus-inner {
      border-style: none;
      padding: 0;
    }

    /**
     ,* Restore the focus styles unset by the previous rule.
     ,*/

    button:-moz-focusring,
    [type="button"]:-moz-focusring,
    [type="reset"]:-moz-focusring,
    [type="submit"]:-moz-focusring {
      outline: 1px dotted ButtonText;
    }

    /**
     ,* Correct the padding in Firefox.
     ,*/

    fieldset {
      padding: 0.35em 0.75em 0.625em;
    }

    /**
     ,* 1. Correct the text wrapping in Edge and IE.
     ,* 2. Correct the color inheritance from `fieldset` elements in IE.
     ,* 3. Remove the padding so developers are not caught out when they zero out
     ,*    `fieldset` elements in all browsers.
     ,*/

    legend {
      box-sizing: border-box; /* 1 */
      color: inherit; /* 2 */
      display: table; /* 1 */
      max-width: 100%; /* 1 */
      padding: 0; /* 3 */
      white-space: normal; /* 1 */
    }

    /**
     ,* Add the correct vertical alignment in Chrome, Firefox, and Opera.
     ,*/

    progress {
      vertical-align: baseline;
    }

    /**
     ,* Remove the default vertical scrollbar in IE 10+.
     ,*/

    textarea {
      overflow: auto;
    }

    /**
     ,* 1. Add the correct box sizing in IE 10.
     ,* 2. Remove the padding in IE 10.
     ,*/

    [type="checkbox"],
    [type="radio"] {
      box-sizing: border-box; /* 1 */
      padding: 0; /* 2 */
    }

    /**
     ,* Correct the cursor style of increment and decrement buttons in Chrome.
     ,*/

    [type="number"]::-webkit-inner-spin-button,
    [type="number"]::-webkit-outer-spin-button {
      height: auto;
    }

    /**
     ,* 1. Correct the odd appearance in Chrome and Safari.
     ,* 2. Correct the outline style in Safari.
     ,*/

    [type="search"] {
      -webkit-appearance: textfield; /* 1 */
      outline-offset: -2px; /* 2 */
    }

    /**
     ,* Remove the inner padding in Chrome and Safari on macOS.
     ,*/

    [type="search"]::-webkit-search-decoration {
      -webkit-appearance: none;
    }

    /**
     ,* 1. Correct the inability to style clickable types in iOS and Safari.
     ,* 2. Change font properties to `inherit` in Safari.
     ,*/

    ::-webkit-file-upload-button {
      -webkit-appearance: button; /* 1 */
      font: inherit; /* 2 */
    }

    /* Interactive
       ========================================================================== */

    /*
     ,* Add the correct display in Edge, IE 10+, and Firefox.
     ,*/

    details {
      display: block;
    }

    /*
     ,* Add the correct display in all browsers.
     ,*/

    summary {
      display: list-item;
    }

    /* Misc
       ========================================================================== */

    /**
     ,* Add the correct display in IE 10+.
     ,*/

    template {
      display: none;
    }

    /**
     ,* Add the correct display in IE 10.
     ,*/

    [hidden] {
      display: none;
    }
#+END_SRC
# normalize.css v8.0.0 ends here
******* normalize.css v4.1.1
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/normalize.css
:END:
#+BEGIN_SRC css :tangle no
  /*
  normalize.css: The MIT License (MIT)

  Copyright © Nicolas Gallagher and Jonathan Neal

  Permission is hereby granted, free of charge, to any person obtaining a copy of
  this software and associated documentation files (the "Software"), to deal in
  the Software without restriction, including without limitation the rights to
  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  of the Software, and to permit persons to whom the Software is furnished to do
  so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  ,*/
#+END_SRC
#+BEGIN_SRC css :tangle no
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html {
  font-family: sans-serif; /* 1 */
  line-height: 1.15; /* 2 */
  -ms-text-size-adjust: 100%; /* 3 */
  -webkit-text-size-adjust: 100%; /* 3 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template, /* 1 */
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
#+END_SRC
# normalize.css v4.1.1 ends here

******* htmlize.css
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/htmlize.css
:END:
#+BEGIN_SRC css
  /* Generated from (org-html-htmlize-generate-css) with minimum
     packages loaded and default light theme */

  .org-bold {
      /* bold */
      font-weight: bold;
  }
  .org-bold-italic {
      /* bold-italic */
      font-weight: bold;
      font-style: italic;
  }
  .org-border {
  }
  .org-buffer-menu-buffer {
      /* buffer-menu-buffer */
      font-weight: bold;
  }
  .org-builtin {
      /* font-lock-builtin-face */
      color: #483d8b;
  }
  .org-button {
      /* button */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-calendar-month-header {
      /* calendar-month-header */
      color: #0000ff;
  }
  .org-calendar-today {
      /* calendar-today */
      text-decoration: underline;
  }
  .org-calendar-weekday-header {
      /* calendar-weekday-header */
      color: #008b8b;
  }
  .org-calendar-weekend-header {
      /* calendar-weekend-header */
      color: #b22222;
  }
  .org-comint-highlight-input {
      /* comint-highlight-input */
      font-weight: bold;
  }
  .org-comint-highlight-prompt {
      /* comint-highlight-prompt */
      color: #0000cd;
  }
  .org-comment {
      /* font-lock-comment-face */
      color: #b22222;
  }
  .org-comment-delimiter {
      /* font-lock-comment-delimiter-face */
      color: #b22222;
  }
  .org-constant {
      /* font-lock-constant-face */
      color: #008b8b;
  }
  .org-diary {
      /* diary */
      color: #ff0000;
  }
  .org-doc {
      /* font-lock-doc-face */
      color: #8b2252;
  }
  .org-error {
      /* error */
      color: #ff0000;
      font-weight: bold;
  }
  .org-escape-glyph {
      /* escape-glyph */
      color: #a52a2a;
  }
  .org-file-name-shadow {
      /* file-name-shadow */
      color: #7f7f7f;
  }
  .org-fixed-pitch {
  }
  .org-fringe {
      /* fringe */
      background-color: #f2f2f2;
  }
  .org-function-name {
      /* font-lock-function-name-face */
      color: #0000ff;
  }
  .org-glyphless-char {
      /* glyphless-char */
      font-size: 60%;
  }
  .org-header-line {
      /* header-line */
      color: #333333;
      background-color: #e5e5e5;
  }
  .org-help-argument-name {
      /* help-argument-name */
      font-style: italic;
  }
  .org-highlight {
      /* highlight */
      background-color: #b4eeb4;
  }
  .org-holiday {
      /* holiday */
      background-color: #ffc0cb;
  }
  .org-info-header-node {
      /* info-header-node */
      color: #a52a2a;
      font-weight: bold;
      font-style: italic;
  }
  .org-info-header-xref {
      /* info-header-xref */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-info-index-match {
      /* info-index-match */
      background-color: #ffff00;
  }
  .org-info-menu-header {
      /* info-menu-header */
      font-weight: bold;
  }
  .org-info-menu-star {
      /* info-menu-star */
      color: #ff0000;
  }
  .org-info-node {
      /* info-node */
      color: #a52a2a;
      font-weight: bold;
      font-style: italic;
  }
  .org-info-title-1 {
      /* info-title-1 */
      font-size: 172%;
      font-weight: bold;
  }
  .org-info-title-2 {
      /* info-title-2 */
      font-size: 144%;
      font-weight: bold;
  }
  .org-info-title-3 {
      /* info-title-3 */
      font-size: 120%;
      font-weight: bold;
  }
  .org-info-title-4 {
      /* info-title-4 */
      font-weight: bold;
  }
  .org-info-xref {
      /* info-xref */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-italic {
      /* italic */
      font-style: italic;
  }
  .org-keyword {
      /* font-lock-keyword-face */
      color: #a020f0;
  }
  .org-lazy-highlight {
      /* lazy-highlight */
      background-color: #afeeee;
  }
  .org-link {
      /* link */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-link-visited {
      /* link-visited */
      color: #8b008b;
      text-decoration: underline;
  }
  .org-makefile-makepp-perl {
      /* makefile-makepp-perl */
      background-color: #bfefff;
  }
  .org-makefile-shell {
  }
  .org-makefile-space {
      /* makefile-space */
      background-color: #ff69b4;
  }
  .org-makefile-targets {
      /* makefile-targets */
      color: #0000ff;
  }
  .org-match {
      /* match */
      background-color: #ffff00;
  }
  .org-negation-char {
  }
  .org-next-error {
      /* next-error */
      background-color: gtk_selection_bg_color;
  }
  .org-nobreak-space {
      /* nobreak-space */
      color: #a52a2a;
      text-decoration: underline;
  }
  .org-org-agenda-calendar-event {
      /* org-agenda-calendar-event */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-agenda-calendar-sexp {
      /* org-agenda-calendar-sexp */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-agenda-clocking {
      /* org-agenda-clocking */
      background-color: #ffff00;
  }
  .org-org-agenda-column-dateline {
      /* org-agenda-column-dateline */
      background-color: #e5e5e5;
  }
  .org-org-agenda-current-time {
      /* org-agenda-current-time */
      color: #b8860b;
  }
  .org-org-agenda-date {
      /* org-agenda-date */
      color: #0000ff;
  }
  .org-org-agenda-date-today {
      /* org-agenda-date-today */
      color: #0000ff;
      font-weight: bold;
      font-style: italic;
  }
  .org-org-agenda-date-weekend {
      /* org-agenda-date-weekend */
      color: #0000ff;
      font-weight: bold;
  }
  .org-org-agenda-diary {
      /* org-agenda-diary */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-agenda-dimmed-todo {
      /* org-agenda-dimmed-todo-face */
      color: #7f7f7f;
  }
  .org-org-agenda-done {
      /* org-agenda-done */
      color: #228b22;
  }
  .org-org-agenda-filter-category {
      /* org-agenda-filter-category */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-filter-effort {
      /* org-agenda-filter-effort */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-filter-regexp {
      /* org-agenda-filter-regexp */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-filter-tags {
      /* org-agenda-filter-tags */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-agenda-restriction-lock {
      /* org-agenda-restriction-lock */
      background-color: #eeeeee;
  }
  .org-org-agenda-structure {
      /* org-agenda-structure */
      color: #0000ff;
  }
  .org-org-archived {
      /* org-archived */
      color: #7f7f7f;
  }
  .org-org-block {
      /* org-block */
      color: #7f7f7f;
  }
  .org-org-block-begin-line {
      /* org-block-begin-line */
      color: #b22222;
  }
  .org-org-block-end-line {
      /* org-block-end-line */
      color: #b22222;
  }
  .org-org-checkbox {
      /* org-checkbox */
      font-weight: bold;
  }
  .org-org-checkbox-statistics-done {
      /* org-checkbox-statistics-done */
      color: #228b22;
      font-weight: bold;
  }
  .org-org-checkbox-statistics-todo {
      /* org-checkbox-statistics-todo */
      color: #ff0000;
      font-weight: bold;
  }
  .org-org-clock-overlay {
      /* org-clock-overlay */
      color: #000000;
      background-color: #d3d3d3;
  }
  .org-org-code {
      /* org-code */
      color: #7f7f7f;
  }
  .org-org-column {
      /* org-column */
      background-color: #e5e5e5;
  }
  .org-org-column-title {
      /* org-column-title */
      background-color: #e5e5e5;
      font-weight: bold;
      text-decoration: underline;
  }
  .org-org-date {
      /* org-date */
      color: #a020f0;
      text-decoration: underline;
  }
  .org-org-date-selected {
      /* org-date-selected */
      color: #ff0000;
  }
  .org-org-default {
      /* org-default */
      color: #000000;
      background-color: #ffffff;
  }
  .org-org-document-info {
      /* org-document-info */
      color: #191970;
  }
  .org-org-document-info-keyword {
      /* org-document-info-keyword */
      color: #7f7f7f;
  }
  .org-org-document-title {
      /* org-document-title */
      color: #191970;
      font-weight: bold;
  }
  .org-org-done {
      /* org-done */
      color: #228b22;
      font-weight: bold;
  }
  .org-org-drawer {
      /* org-drawer */
      color: #0000ff;
  }
  .org-org-ellipsis {
      /* org-ellipsis */
      color: #b8860b;
      text-decoration: underline;
  }
  .org-org-footnote {
      /* org-footnote */
      color: #a020f0;
      text-decoration: underline;
  }
  .org-org-formula {
      /* org-formula */
      color: #b22222;
  }
  .org-org-headline-done {
      /* org-headline-done */
      color: #bc8f8f;
  }
  .org-org-hide {
      /* org-hide */
      color: #ffffff;
  }
  .org-org-latex-and-related {
      /* org-latex-and-related */
      color: #8b4513;
  }
  .org-org-level-1 {
      /* org-level-1 */
      color: #0000ff;
  }
  .org-org-level-2 {
      /* org-level-2 */
      color: #a0522d;
  }
  .org-org-level-3 {
      /* org-level-3 */
      color: #a020f0;
  }
  .org-org-level-4 {
      /* org-level-4 */
      color: #b22222;
  }
  .org-org-level-5 {
      /* org-level-5 */
      color: #228b22;
  }
  .org-org-level-6 {
      /* org-level-6 */
      color: #008b8b;
  }
  .org-org-level-7 {
      /* org-level-7 */
      color: #483d8b;
  }
  .org-org-level-8 {
      /* org-level-8 */
      color: #8b2252;
    }
  .org-org-link {
      /* org-link */
      color: #3a5fcd;
      text-decoration: underline;
  }
  .org-org-list-dt {
      /* org-list-dt */
      font-weight: bold;
  }
  .org-org-macro {
      /* org-macro */
      color: #8b4513;
  }
  .org-org-meta-line {
      /* org-meta-line */
      color: #b22222;
  }
  .org-org-mode-line-clock {
      /* org-mode-line-clock */
      color: #000000;
      background-color: #bfbfbf;
  }
  .org-org-mode-line-clock-overrun {
      /* org-mode-line-clock-overrun */
      color: #000000;
      background-color: #ff0000;
  }
  .org-org-priority {
      /* org-priority */
      color: #a020f0;
  }
  .org-org-property-value {
  }
  .org-org-quote {
      /* org-quote */
      color: #7f7f7f;
  }
  .org-org-scheduled {
      /* org-scheduled */
      color: #006400;
  }
  .org-org-scheduled-previously {
      /* org-scheduled-previously */
      color: #b22222;
  }
  .org-org-scheduled-today {
      /* org-scheduled-today */
      color: #006400;
  }
  .org-org-sexp-date {
      /* org-sexp-date */
      color: #a020f0;
  }
  .org-org-special-keyword {
      /* org-special-keyword */
      color: #a020f0;
  }
  .org-org-table {
      /* org-table */
      color: #0000ff;
  }
  .org-org-tag {
      /* org-tag */
      font-weight: bold;
  }
  .org-org-tag-group {
      /* org-tag-group */
      font-weight: bold;
  }
  .org-org-target {
      /* org-target */
      text-decoration: underline;
  }
  .org-org-time-grid {
      /* org-time-grid */
      color: #b8860b;
  }
  .org-org-todo {
      /* org-todo */
      color: #ff0000;
      font-weight: bold;
  }
  .org-org-upcoming-deadline {
      /* org-upcoming-deadline */
      color: #b22222;
  }
  .org-org-verbatim {
      /* org-verbatim */
      color: #7f7f7f;
  }
  .org-org-verse {
      /* org-verse */
      color: #7f7f7f;
  }
  .org-org-warning {
      /* org-warning */
      color: #ff0000;
      font-weight: bold;
  }
  .org-outline-1 {
      /* outline-1 */
      color: #0000ff;
  }
  .org-outline-2 {
      /* outline-2 */
      color: #a0522d;
  }
  .org-outline-3 {
      /* outline-3 */
      color: #a020f0;
  }
  .org-outline-4 {
      /* outline-4 */
      color: #b22222;
  }
  .org-outline-5 {
      /* outline-5 */
      color: #228b22;
  }
  .org-outline-6 {
      /* outline-6 */
      color: #008b8b;
  }
  .org-outline-7 {
      /* outline-7 */
      color: #483d8b;
  }
  .org-outline-8 {
      /* outline-8 */
      color: #8b2252;
  }
  .org-preprocessor {
      /* font-lock-preprocessor-face */
      color: #483d8b;
  }
  .org-regexp-grouping-backslash {
      /* font-lock-regexp-grouping-backslash */
      font-weight: bold;
  }
  .org-regexp-grouping-construct {
      /* font-lock-regexp-grouping-construct */
      font-weight: bold;
  }
  .org-region {
      /* region */
      background-color: gtk_selection_bg_color;
  }
  .org-secondary-selection {
      /* secondary-selection */
      background-color: #ffff00;
  }
  .org-shadow {
      /* shadow */
      color: #7f7f7f;
  }
  .org-show-paren-match {
      /* show-paren-match */
      background-color: #40e0d0;
  }
  .org-show-paren-mismatch {
      /* show-paren-mismatch */
      color: #ffffff;
      background-color: #a020f0;
  }
  .org-string {
      /* font-lock-string-face */
      color: #8b2252;
  }
  .org-success {
      /* success */
      color: #228b22;
      font-weight: bold;
  }
  .org-table-cell {
      /* table-cell */
      color: #e5e5e5;
      background-color: #0000ff;
  }
  .org-tooltip {
      /* tooltip */
      color: #000000;
      background-color: #ffffe0;
  }
  .org-trailing-whitespace {
      /* trailing-whitespace */
      background-color: #ff0000;
  }
  .org-type {
      /* font-lock-type-face */
      color: #228b22;
  }
  .org-underline {
      /* underline */
      text-decoration: underline;
  }
  .org-variable-name {
      /* font-lock-variable-name-face */
      color: #a0522d;
  }
  .org-variable-pitch {
  }
  .org-vertical-border {
  }
  .org-warning {
      /* warning */
      color: #ff8c00;
      font-weight: bold;
  }
  .org-warning-1 {
      /* font-lock-warning-face */
      color: #ff0000;
      font-weight: bold;
  }
#+END_SRC
# htmlize.css ends here

******* orgstyle-bare.css
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/orgstyle-bare.css
:END:
#+BEGIN_SRC css
  /*
  orgstyle-bare.css: derived from org.css @ https://github.com/gongzhitaao/orgcss.git
  A tutorial documentation for org.css ("CSS for Org-exported HTML") is available at
  https://gongzhitaao.org/orgcss/

  org.css: MIT License

  Copyright (c) 2016 gongzhitaao

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ,*/
#+END_SRC
#+BEGIN_SRC css :tangle no
  $sans: Helvetica, sans-serif;
  $serif: Georgia, serif;
  $monospace: Lucida Console, monospace;
  $code-size: 80%;
  $smaller: 90%;
  $max-width: 710px;

  body {
      width: 95%;
      margin: 2% auto;
      font-size: 14px;
      line-height: 1.4em;
      font-family: $serif;
      color: #333;
  }

  @media screen and (min-width: 600px) {
      body {
          font-size: 18px;
      }
  }

  @media screen and (min-width: 910px) {
      body {
          width: 900px;
      }
  }

  ::selection {
      background: #D6EDFF;
  }

  p {
      margin: 0 auto;
  }

  ol,ul {
      margin: 0 auto;
  }

  dl {
      margin: 0 auto;
  }

  .title {
      text-align: center;
      margin: 0.8em auto;
      color: black;
  }

  .subtitle {
      text-align: center;
      font-size: 1.1em;
      line-height: 1.4;
      font-weight: bold;
      margin: 1em auto;
  }

  .abstract {
      margin: auto;
      width: 80%;
      font-style: italic;
  }

  .abstract p:last-of-type:before {
      content: "    ";
      white-space: pre;
  }

  .status {
      font-size: $smaller;
      margin: 2em auto;
  }

  [class^="section-number-"] {
      margin-right: .5em;
  }

  [id^="orgheadline"] {
      clear: both;
  }

  #footnotes {
      font-size: $smaller;
  }

  .footpara {
      display: inline;
      margin: .2em auto;
  }

  .footdef {
      margin-bottom: 1em;
  }

  .footdef sup {
      padding-right: .5em;
  }

  a {
      color: #527d9a;
      text-decoration: none;
  }

  a:hover {
      color: #003355;
      border-bottom: 1px dotted;
  }

  figure {
      padding: 0px;
      margin: 1em auto;
      text-align: center;
  }

  img {
      max-width: 100%;
      vertical-align: middle;
  }

  .MathJax_Display {
      font-size: $smaller;
      margin: 0!important;
      width: $smaller!important;
  }

  h1,h2,h3,h4,h5,h6 {
      color: #A5573E;
      line-height: 1em;
      font-family: $sans;
  }

  h1,h2,h3 {
      line-height: 1.4em;
  }

  h4,h5,h6 {
      font-size: 1em;
  }

  @media screen and (min-width: 600px) {
      h1 {
          font-size: 2em;
      }
      h2 {
          font-size: 1.5em;
      }
      h3 {
          font-size: 1.3em;
      }
      h1,h2,h3 {
          line-height: 1.4em;
      }
      h4,h5,h6 {
          font-size: 1.1em;
      }
  }

  dt {
      font-weight: bold;
  }

  /* table */

  table {
      margin: 1em auto;
      border-top: 2px solid;
      border-bottom: 2px solid;
      border-collapse: collapse;
  }

  thead {
      border-bottom: 2px solid;
  }

  table td + td, table th + th {
      border-left: 1px solid gray;
  }

  table tr {
      border-top: 1px solid lightgray;
  }

  td,th {
      padding: 0.3em 0.6em;
      vertical-align: middle;
  }

  caption.t-above {
      caption-side: top;
  }

  caption.t-bottom {
      caption-side: bottom;
  }

  caption {
      margin-bottom: 0.3em;
  }

  figcaption {
      margin-top: 0.3em;
  }

  th.org-right {
      text-align: center;
  }

  th.org-left {
      text-align: center;
  }

  th.org-center {
      text-align: center;
  }

  td.org-right {
      text-align: right;
  }

  td.org-left {
      text-align: left;
  }

  td.org-center {
      text-align: center;
  }

  blockquote {
      margin: 1em 2em;
      padding-left: 1em;
      border-left: 3px solid #ccc;
  }

  kbd {
      background-color: #f7f7f7;
      font-size: $code-size;
      margin: 0 .1em;
      padding: .1em .6em;
  }

  .todo {
      background-color: red;
      color: white;
      padding: .1em 0.3em;
      border-radius: 3px;
      background-clip: padding-box;
      font-size: $code-size;
      font-family: $monospace;
      line-height: 1;
  }

  .done {
      background-color: green;
      color: white;
      padding: .1em 0.3em;
      border-radius: 3px;
      background-clip: padding-box;
      font-size: $code-size;
      font-family: $monospace;
      line-height: 1;
  }

  .priority {
      color: orange;
      font-family: $monospace;
  }

  /* Because tag span is set to float.  This is more like a hacking.  Maybe we
     need a cleaner solution. */
  #table-of-contents li {
      clear: both;
  }

  .tag {
      font-family: $monospace;
      font-size: 0.7em;
      font-weight: normal;
  }

  .tag span {
      padding: 0.3em 0.3em;
      float: right;
      margin-right: .5em;
      border: 1px solid #bbb;
      border-radius: 3px;
      background-clip: padding-box;
      color: #333;
      background-color: #eee;
      line-height: 1;
  }

  .timestamp {
      color: #bebebe;
      font-size: $smaller;
  }

  .timestamp-kwd {
      color: #5f9ea0;
  }

  .org-right {
      margin-left: auto;
      margin-right: 0px;
      text-align: right;
  }

  .org-left {
      margin-left: 0px;
      margin-right: auto;
      text-align: left;
  }

  .org-center {
      margin-left: auto;
      margin-right: auto;
      text-align: center;
  }

  .underline {
      text-decoration: underline;
  }

  #postamble p, #preamble p {
      font-size: $smaller;
      margin: .2em;
  }

  p.verse {
      margin-left: 3%;
  }

  :not(pre) > code {
      padding: 2px 5px;
      margin: auto 1px;
      border: 1px solid #DDD;
      border-radius: 3px;
      background-clip: padding-box;
      color: #333;
      font-size: $code-size;
  }

  .org-src-container {
      border: 1px solid #ccc;
      box-shadow: 3px 3px 3px #eee;
      font-family: $monospace;
      font-size: $code-size;
      margin: 1em auto;
      padding: 0.1em 0.5em;
      position: relative;
  }

  .org-src-container>pre {
      overflow: auto;
  }

  .org-src-container>pre:before {
      display: block;
      position: absolute;
      background-color: #b3b3b3;
      top: 0;
      right: 0;
      padding: 0 0.5em;
      border-bottom-left-radius: 8px;
      border: 0;
      color: white;
      font-size: $code-size;
  }

  /* from http://demo.thi.ng/org-spec/ */

  .org-src-container>pre.src-sh:before {
      content: 'sh';
  }
  .org-src-container>pre.src-bash:before {
      content: 'bash';
  }
  .org-src-container>pre.src-emacs-lisp:before {
      content: 'Emacs Lisp';
  }
  .org-src-container>pre.src-R:before {
      content: 'R';
  }
  .org-src-container>pre.src-org:before {
      content: 'Org';
  }
  .org-src-container>pre.src-cpp:before {
      content: 'C++';
  }
  .org-src-container>pre.src-c:before {
      content: 'C';
  }
  .org-src-container>pre.src-html:before {
      content: 'HTML'
  }
  .org-src-container>pre.src-js:before {
      content: 'Javascript'
  }
  .org-src-container>pre.src-javascript:before {
      content: 'Javascript'
  }

  // More languages from http://orgmode.org/worg/org-contrib/babel/languages.html

  .org-src-container>pre.src-abc:before {
      content: 'ABC';
  }
  .org-src-container>pre.src-asymptote:before {
      content: 'Asymptote';
  }
  .org-src-container>pre.src-awk:before {
      content: 'Awk';
  }
  .org-src-container>pre.src-C:before {
      content: 'C';
  }
  .org-src-container>pre.src-calc:before {
      content: 'Calc';
  }
  .org-src-container>pre.src-clojure:before {
      content: 'Clojure';
  }
  .org-src-container>pre.src-comint:before {
      content: 'comint';
  }
  .org-src-container>pre.src-css:before {
      content: 'CSS';
  }
  .org-src-container>pre.src-D:before {
      content: 'D';
  }
  .org-src-container>pre.src-ditaa:before {
      content: 'Ditaa';
  }
  .org-src-container>pre.src-dot:before {
      content: 'Dot';
  }
  .org-src-container>pre.src-ebnf:before {
      content: 'ebnf';
  }
  .org-src-container>pre.src-forth:before {
      content: 'Forth';
  }
  .org-src-container>pre.src-F90:before {
      content: 'Fortran';
  }
  .org-src-container>pre.src-gnuplot:before {
      content: 'Gnuplot';
  }
  .org-src-container>pre.src-haskell:before {
      content: 'Haskell';
  }
  .org-src-container>pre.src-io:before {
      content: 'Io';
  }
  .org-src-container>pre.src-java:before {
      content: 'Java';
  }
  .org-src-container>pre.src-latex:before {
      content: 'LaTeX';
  }
  .org-src-container>pre.src-ledger:before {
      content: 'Ledger';
  }
  .org-src-container>pre.src-ly:before {
      content: 'Lilypond';
  }
  .org-src-container>pre.src-lisp:before {
      content: 'Lisp';
  }
  .org-src-container>pre.src-makefile:before {
      content: 'Make';
  }
  .org-src-container>pre.src-matlab:before {
      content: 'Matlab';
  }
  .org-src-container>pre.src-max:before {
      content: 'Maxima';
  }
  .org-src-container>pre.src-mscgen:before {
      content: 'Mscgen';
  }
  .org-src-container>pre.src-Caml:before {
      content: 'Objective';
  }
  .org-src-container>pre.src-octave:before {
      content: 'Octave';
  }
  .org-src-container>pre.src-org:before {
      content: 'Org';
  }
  .org-src-container>pre.src-perl:before {
      content: 'Perl';
  }
  .org-src-container>pre.src-picolisp:before {
      content: 'Picolisp';
  }
  .org-src-container>pre.src-plantuml:before {
      content: 'PlantUML';
  }
  .org-src-container>pre.src-python:before {
      content: 'Python';
  }
  .org-src-container>pre.src-ruby:before {
      content: 'Ruby';
  }
  .org-src-container>pre.src-sass:before {
      content: 'Sass';
  }
  .org-src-container>pre.src-scala:before {
      content: 'Scala';
  }
  .org-src-container>pre.src-scheme:before {
      content: 'Scheme';
  }
  .org-src-container>pre.src-screen:before {
      content: 'Screen';
  }
  .org-src-container>pre.src-sed:before {
      content: 'Sed';
  }
  .org-src-container>pre.src-shell:before {
      content: 'shell';
  }
  .org-src-container>pre.src-shen:before {
      content: 'Shen';
  }
  .org-src-container>pre.src-sql:before {
      content: 'SQL';
  }
  .org-src-container>pre.src-sqlite:before {
      content: 'SQLite';
  }
  .org-src-container>pre.src-stan:before {
      content: 'Stan';
  }
  .org-src-container>pre.src-vala:before {
      content: 'Vala';
  }
  .org-src-container>pre.src-axiom:before {
      content: 'Axiom';
  }
  .org-src-container>pre.src-browser:before {
      content: 'HTML';
  }
  .org-src-container>pre.src-cypher:before {
      content: 'Neo4j';
  }
  .org-src-container>pre.src-elixir:before {
      content: 'Elixir';
  }
  .org-src-container>pre.src-request:before {
      content: 'http';
  }
  .org-src-container>pre.src-ipython:before {
      content: 'iPython';
  }
  .org-src-container>pre.src-kotlin:before {
      content: 'Kotlin';
  }
  .org-src-container>pre.src-Flavored Erlang  lfe:before {
      content: 'Lisp';
  }
  .org-src-container>pre.src-mongo:before {
      content: 'MongoDB';
  }
  .org-src-container>pre.src-prolog:before {
      content: 'Prolog';
  }
  .org-src-container>pre.src-rec:before {
      content: 'rec';
  }
  .org-src-container>pre.src-ML  sml:before {
      content: 'Standard';
  }
  .org-src-container>pre.src-Translate  translate:before {
      content: 'Google';
  }
  .org-src-container>pre.src-typescript:before {
      content: 'Typescript';
  }
  .org-src-container>pre.src-rust:before {
      content: 'Rust';
  }

  .inlinetask {
      background: #ffffcc;
      border: 2px solid gray;
      margin: 10px;
      padding: 10px;
  }

  #org-div-home-and-up {
      font-size: 70%;
      text-align: right;
      white-space: nowrap;
  }

  .linenr {
      font-size: $smaller;
  }

  .code-highlighted {
      background-color: #ffff00;
  }

  #bibliography {
      font-size: $smaller;
  }

  #bibliography table {
      width: 100%;
  }

  .creator {
      display: block;
  }

  @media screen and (min-width: 600px) {
      .creator {
          display: inline;
          float: right;
      }
  }
#+END_SRC
#+BEGIN_SRC css
  body {
      width:95%;
      margin:2% auto;
      font-size:14px;
      line-height:1.4em;
      font-family:Georgia,serif;
      color:#333
  }

  @media screen and (min-width:600px) {
      body {
          font-size:18px
      }
  }

  @media screen and (min-width:910px) {
      body {
          width:900px
      }
  }

  ::-moz-selection {
      background:#d6edff
  }

  ::selection {
      background:#d6edff
  }

  dl,ol,p,ul {
      margin:0 auto
  }

  .title {
      margin:.8em auto;
      color:#000
  }

  .subtitle,.title {
      text-align:center
  }

  .subtitle {
      font-size:1.1em;
      line-height:1.4;
      font-weight:700;
      margin:1em auto
  }

  .abstract {
      margin:auto;
      width:80%;
      font-style:italic
  }

  .abstract p:last-of-type:before {
      content:"    ";
      white-space:pre
  }

  .status {
      font-size:90%;
      margin:2em auto
  }

  [class^=section-number-] {
      margin-right:.5em
  }

  [id^=orgheadline] {
      clear:both
  }

  #footnotes {
      font-size:90%
  }

  .footpara {
      display:inline;
      margin:.2em auto
  }

  .footdef {
      margin-bottom:1em
  }

  .footdef sup {
      padding-right:.5em
  }

  a {
      color:#527d9a;
      text-decoration:none
  }

  a:hover {
      color:#035;
      border-bottom:1px dotted
  }

  figure {
      padding:0;
      margin:1em auto;
      text-align:center
  }

  img {
      max-width:100%;
      vertical-align:middle
  }

  .MathJax_Display {
      font-size:90%;
      margin:0!important;
      width:90%!important
  }

  h1,h2,h3,h4,h5,h6 {
      color:#a5573e;
      line-height:1em;
      font-family:Helvetica,sans-serif
  }

  h1,h2,h3 {
      line-height:1.4em
  }

  h4,h5,h6 {
      font-size:1em
  }

  @media screen and (min-width:600px) {
      h1 {
          font-size:2em
      }
      h2 {
          font-size:1.5em
      }
      h3 {
          font-size:1.3em
      }
      h1,h2,h3 {
          line-height:1.4em
      }
      h4,h5,h6 {
          font-size:1.1em
      }
  }

  dt {
      font-weight:700
  }

  table {
      margin:1em auto;
      border-top:2px solid;
      border-collapse:collapse
  }

  table,thead {
      border-bottom:2px solid
  }

  table td+td,table th+th {
      border-left:1px solid gray
  }

  table tr {
      border-top:1px solid #d3d3d3
  }

  td,th {
      padding:.3em .6em;
      vertical-align:middle
  }

  caption.t-above {
      caption-side:top
  }

  caption.t-bottom {
      caption-side:bottom
  }

  caption {
      margin-bottom:.3em
  }

  figcaption {
      margin-top:.3em
  }

  th.org-center,th.org-left,th.org-right {
      text-align:center
  }

  td.org-right {
      text-align:right
  }

  td.org-left {
      text-align:left
  }

  td.org-center {
      text-align:center
  }

  blockquote {
      margin:1em 2em;
      padding-left:1em;
      border-left:3px solid #ccc
  }

  kbd {
      background-color:#f7f7f7;
      font-size:80%;
      margin:0 .1em;
      padding:.1em .6em
      }

  .todo {
      background-color:red
  }

  .done,.todo {
      color:#fff;
      padding:.1em .3em;
      border-radius:3px;
      background-clip:padding-box;
      font-size:80%;
      font-family:Lucida Console,monospace;
      line-height:1
  }

  .done {
      background-color:green
  }

  .priority {
      color:orange;
      font-family:Lucida Console,monospace
  }

  #table-of-contents li {
      clear:both
  }

  .tag {
      font-family:Lucida Console,monospace;
      font-size:.7em;
      font-weight:400
  }

  .tag span {
      padding:.3em;
      float:right;
      margin-right:.5em;
      border:1px solid #bbb;
      border-radius:3px;
      background-clip:padding-box;
      color:#333;
      background-color:#eee;
      line-height:1
  }

  .timestamp {
      color:#bebebe;
      font-size:90%
  }

  .timestamp-kwd {
      color:#5f9ea0
  }

  .org-right {
      margin-left:auto;
      margin-right:0;
      text-align:right
  }

  .org-left {
      margin-left:0;
      margin-right:auto;
      text-align:left
  }

  .org-center {
      margin-left:auto;
      margin-right:auto;
      text-align:center
  }

  .underline {
      text-decoration:underline
  }

  #postamble p,#preamble p {
      font-size:90%;
      margin:.2em
  }

  p.verse {
      margin-left:3%
  }

  :not(pre)>code {
      padding:2px 5px;
      margin:auto 1px;
      border:1px solid #ddd;
      border-radius:3px;
      background-clip:padding-box;
      color:#333;
      font-size:80%
  }

  .org-src-container {
      border:1px solid #ccc;
      box-shadow:3px 3px 3px #eee;
      font-family:Lucida Console,monospace;
      font-size:80%;
      margin:1em auto;
      padding:.1em .5em;
      position:relative
  }

  .org-src-container>pre {
      overflow:auto
  }

  .org-src-container>pre:before {
      display:block;
      position:absolute;
      background-color:#b3b3b3;
      top:0;
      right:0;
      padding:0 .5em;
      border-bottom-left-radius:8px;
      border:0;
      color:#fff;
      font-size:80%
  }

  .org-src-container>pre.src-sh:before {
      content:"sh"
  }

  .org-src-container>pre.src-bash:before {
      content:"bash"
  }

  .org-src-container>pre.src-emacs-lisp:before {
      content:"Emacs Lisp"
  }

  .org-src-container>pre.src-R:before {
      content:"R"
  }

  .org-src-container>pre.src-cpp:before {
      content:"C++"
  }

  .org-src-container>pre.src-c:before {
      content:"C"
  }

  .org-src-container>pre.src-html:before {
      content:"HTML"
  }

  .org-src-container>pre.src-javascript:before,.org-src-container>pre.src-js:before {
      content:"Javascript"
  }

  // more languages 0% http://orgmode.org/worg/org-contrib/babel/languages.html .org-src-container>pre.src-abc:before {
      content:"ABC"
  }

  .org-src-container>pre.src-asymptote:before {
      content:"Asymptote"
  }

  .org-src-container>pre.src-awk:before {
      content:"Awk"
  }

  .org-src-container>pre.src-C:before {
      content:"C"
  }

  .org-src-container>pre.src-calc:before {
      content:"Calc"
  }

  .org-src-container>pre.src-clojure:before {
      content:"Clojure"
  }

  .org-src-container>pre.src-comint:before {
      content:"comint"
  }

  .org-src-container>pre.src-css:before {
      content:"CSS"
  }

  .org-src-container>pre.src-D:before {
      content:"D"
  }

  .org-src-container>pre.src-ditaa:before {
      content:"Ditaa"
  }

  .org-src-container>pre.src-dot:before {
      content:"Dot"
  }

  .org-src-container>pre.src-ebnf:before {
      content:"ebnf"
  }

  .org-src-container>pre.src-forth:before {
      content:"Forth"
  }

  .org-src-container>pre.src-F90:before {
      content:"Fortran"
  }

  .org-src-container>pre.src-gnuplot:before {
      content:"Gnuplot"
  }

  .org-src-container>pre.src-haskell:before {
      content:"Haskell"
  }

  .org-src-container>pre.src-io:before {
      content:"Io"
  }

  .org-src-container>pre.src-java:before {
      content:"Java"
  }

  .org-src-container>pre.src-latex:before {
      content:"LaTeX"
  }

  .org-src-container>pre.src-ledger:before {
      content:"Ledger"
  }

  .org-src-container>pre.src-ly:before {
      content:"Lilypond"
  }

  .org-src-container>pre.src-lisp:before {
      content:"Lisp"
  }

  .org-src-container>pre.src-makefile:before {
      content:"Make"
  }

  .org-src-container>pre.src-matlab:before {
      content:"Matlab"
  }

  .org-src-container>pre.src-max:before {
      content:"Maxima"
  }

  .org-src-container>pre.src-mscgen:before {
      content:"Mscgen"
  }

  .org-src-container>pre.src-Caml:before {
      content:"Objective"
  }

  .org-src-container>pre.src-octave:before {
      content:"Octave"
  }

  .org-src-container>pre.src-org:before {
      content:"Org"
  }

  .org-src-container>pre.src-perl:before {
      content:"Perl"
  }

  .org-src-container>pre.src-picolisp:before {
      content:"Picolisp"
  }

  .org-src-container>pre.src-plantuml:before {
      content:"PlantUML"
  }

  .org-src-container>pre.src-python:before {
      content:"Python"
  }

  .org-src-container>pre.src-ruby:before {
      content:"Ruby"
  }

  .org-src-container>pre.src-sass:before {
      content:"Sass"
  }

  .org-src-container>pre.src-scala:before {
      content:"Scala"
  }

  .org-src-container>pre.src-scheme:before {
      content:"Scheme"
  }

  .org-src-container>pre.src-screen:before {
      content:"Screen"
  }

  .org-src-container>pre.src-sed:before {
      content:"Sed"
  }

  .org-src-container>pre.src-shell:before {
      content:"shell"
  }

  .org-src-container>pre.src-shen:before {
      content:"Shen"
  }

  .org-src-container>pre.src-sql:before {
      content:"SQL"
  }

  .org-src-container>pre.src-sqlite:before {
      content:"SQLite"
  }

  .org-src-container>pre.src-stan:before {
      content:"Stan"
  }

  .org-src-container>pre.src-vala:before {
      content:"Vala"
  }

  .org-src-container>pre.src-axiom:before {
      content:"Axiom"
  }

  .org-src-container>pre.src-browser:before {
      content:"HTML"
  }

  .org-src-container>pre.src-cypher:before {
      content:"Neo4j"
  }

  .org-src-container>pre.src-elixir:before {
      content:"Elixir"
  }

  .org-src-container>pre.src-request:before {
      content:"http"
  }

  .org-src-container>pre.src-ipython:before {
      content:"iPython"
  }

  .org-src-container>pre.src-kotlin:before {
      content:"Kotlin"
  }

  .org-src-container>pre.src-Flavored erlang lfe:before {
      content:"Lisp"
  }

  .org-src-container>pre.src-mongo:before {
      content:"MongoDB"
  }

  .org-src-container>pre.src-prolog:before {
      content:"Prolog"
  }

  .org-src-container>pre.src-rec:before {
      content:"rec"
  }

  .org-src-container>pre.src-ML sml:before {
      content:"Standard"
  }

  .org-src-container>pre.src-Translate translate:before {
      content:"Google"
  }

  .org-src-container>pre.src-typescript:before {
      content:"Typescript"
  }

  .org-src-container>pre.src-rust:before {
      content:"Rust"
  }


  .inlinetask {
      background:#ffc;
      border:2px solid gray;
      margin:10px;
      padding:10px
  }

  #org-div-home-and-up {
      font-size:70%;
      text-align:right;
      white-space:nowrap
  }

  .linenr {
      font-size:90%
  }

  .code-highlighted {
      background-color:#ff0
  }

  #bibliography {
      font-size:90%
  }

  #bibliography table {
      width:100%
  }

  .creator {
      display:block
  }

  @media screen and (min-width:600px) {
      .creator {
          display:inline;
          float:right
      }
  }
#+END_SRC

# orgstyle-bare.css ends here
******* orgstyle-custom.css
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/orgstyle-custom.css
:END:

#+BEGIN_SRC css
  /*! orgstyle-custom.css | MIT License | Haran Mia */
  /* -- */

  body #preamble {
      position: relative;
      border-bottom: 4px solid #8b8b8b;
  }
  body #postamble {
      border-bottom: 2px solid #8b8b8b;
  }


  .mainsail {
      margin:.8em auto;
      color:#A53539/*#000*/
  }

  .headsail,.mainsail {
      color:black;
      text-align:left;
      font-family: "Open Sans", "Deja Vu Sans", Georgia, sans;
      font-size:250%;
      /*text-align:center;*/

  }

  .headsail {
      line-height:1.4;
      font-weight:700;
      margin:1em auto;
      color:#B9543C;
      /*font-size:1.1em;*/

  }


  compass a {
      background: none;
  }

  compass {
      font-family: $monospace;
      font-weight: 700;
      text-transform: uppercase;
      padding: 0;
      margin: 0;
      hyphens: none;
  }

  compass {
      position:absolute;
      /*width:50%;
        height:100%;*/

      /*background: red;
        display: block; *//* fix for opera and ff */

      text-align:right;
      margin-top: 1em;
      right:0;
      top:0;
      margin-top:0;
    font-size: 1rem;
  }

  compass > a {
      margin: 0 1ex;
      color:#FF8C00;
  }

  body .abstract {
    margin: auto;
    width: 90%;
    font-style: italic;
    border-bottom: 2px solid #8b8b8b;
    /*border-bottom: 3px double #8b8b8b;*/
  }

  body .abstract p:last-of-type {
    margin-bottom:.5em;
  }
  body .abstract p:last-of-type:before {
      content:"";
      white-space:pre
  }

  /* -- */
#+END_SRC
# orgstyle-custom.css ends here
******* style-article-index.css
:PROPERTIES:
:header-args: :tangle STOCK/CHUNK/THEMES/PROXY/ASSETS/CSS/style-article-index.css
:END:

#+BEGIN_SRC css
  /*! style-article-index.css | MIT License | Haran Mia */
  /* -- */
  /* Todo */
  body h2 {
      padding-bottom: .75ex;
      /*border-bottom: .15ex solid black;*/
      /*border-top: .15ex solid black;*/
  }

  /* always auto updated... */
  body footer {
      display:none;
  }

  /*
  body .outline-2 .outline-text-2 .article-summary hr {
      border-top: 1px solid #8b8b8b;
  }
  ,*/
  /*
  body .status .compass {
      border-bottom: 3px double #8b8b8b;
  }

  body h1.mainsail {
      border-bottom: 3px double #8b8b8b;
  }
  ,*/

  /* blog articles */

  /*
  body .article-summary {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      font-size: .9rem;
      font-style: italic;
  }

  body .article-summary p {
      margin:0;
  }

  body .article-summary .tags {
      display: flex;
      flex-direction: column;
      text-align:left;
  }
  ,*/

  body .outline-2 {
      /*
      margin-top:10px;
      margin-left:auto;
      margin-right:auto;
      width:65%;
      height:90%;
      ,*/
      border-bottom: 1px solid #8b8b8b;
  }

  body .article-summary {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      /*font-size: .9rem;
      font-style: italic;*/
      position:relative;
      left:0;
      right:0;
      top:0;
      bottom:0;
      margin-top:-30px;
      margin-left:auto;
      margin-right:auto;
      /*border-bottom: 1px solid #8b8b8b;*/
  }
  body .article-summary hr {
      display: none; /* not used, instead opt a horizontal line with CSS in .article-summary above */
      /*border-top: 1px solid #8b8b8b;*/
  }


  body .article-summary p {
      margin:0;
  }


  body .article-summary .tags {
      display: flex;
      flex-direction: row;
      text-align:left;
      margin-top:5px;
  }

  body .abstract {
      margin: auto;
      width: 100%;
      font-style: normal; /*italic;*/
      border-bottom: none; /*3px double #8b8b8b;*/
      margin-top:10px;

  }

  /*--*/
  /*
  body .outline-2 .outline-text-2 .article-head {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      font-size: .12rem;
      font-style: italic;
  }

  body .outline-2 .outline-text-2 .article-head p {
      margin:0;
  }

  .abstract {
      margin:auto;
      width:95%;
      font-style:normal
  }
  ,*/
  /* -- */
#+END_SRC
# style-article-index.css ends here
